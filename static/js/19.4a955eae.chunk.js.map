{"version":3,"sources":["state/teams/hooks.ts","views/Profile/components/HeaderWrapper.tsx","views/Profile/components/ComingSoon.tsx","views/Teams/components/NoProfileCard.tsx","views/Teams/components/TeamHeader.tsx","views/Profile/components/SecondaryCard.tsx","views/Profile/components/StatBox.tsx","views/Teams/components/TeamCard.tsx","views/Teams/Team.tsx"],"names":["useTeam","id","team","useSelector","state","teams","data","dispatch","useAppDispatch","useEffect","fetchTeam","useTeams","isInitialized","isLoading","fetchTeams","HeaderWrapper","styled","div","theme","colors","textSubtle","ComingSoon","children","t","useTranslation","flexDirection","alignItems","justifyContent","p","width","height","as","scale","color","NoProfileCard","mb","isActive","Link","to","mt","TeamHeader","useProfile","profile","showProfileCallout","bold","SecondaryCard","Text","tertiary","defaultProps","StatBox","Icon","icon","title","subtitle","isDisabled","props","mr","textTransform","fontSize","Wrapper","mediaQueries","md","Avatar","img","AvatarWrap","StyledCard","Card","StyledCardHeader","CardHeader","bg","TeamName","Heading","attrs","StatRow","TeamCard","background","src","images","alt","textColor","name","description","CommunityIcon","users","PrizeIcon","Team","idStr","useParams","Number","isValidTeamId","findIndex","Page","PageLoader"],"mappings":"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","file":"static/js/19.4a955eae.chunk.js","sourcesContent":["import { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useAppDispatch } from 'state'\r\nimport { Team } from 'config/constants/types'\r\nimport { State, TeamsState } from '../types'\r\nimport { fetchTeam, fetchTeams } from '.'\r\n\r\nexport const useTeam = (id: number) => {\r\n  const team: Team = useSelector((state: State) => state.teams.data[id])\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeam(id))\r\n  }, [id, dispatch])\r\n\r\n  return team\r\n}\r\n\r\nexport const useTeams = () => {\r\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeams())\r\n  }, [dispatch])\r\n\r\n  return { teams: data, isInitialized, isLoading }\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst HeaderWrapper = styled.div`\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  margin-bottom: 24px;\r\n  padding-bottom: 24px;\r\n`\r\n\r\nexport default HeaderWrapper\r\n","import React from 'react'\r\nimport { BunnyPlaceholderIcon, Flex, Heading } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface ComingSoonProps {\r\n  children?: React.ReactNode\r\n}\r\n\r\nconst ComingSoon: React.FC<ComingSoonProps> = ({ children }) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" p=\"24px\">\r\n      <BunnyPlaceholderIcon width=\"72px\" height=\"72px\" />\r\n      <Heading as=\"h5\" scale=\"md\" color=\"textDisabled\">\r\n        {children || t('Coming Soon!')}\r\n      </Heading>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default ComingSoon\r\n","import React from 'react'\r\nimport { Button, Card, CardBody, Flex, Heading, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst NoProfileCard = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Card mb=\"32px\" isActive>\r\n      <CardBody>\r\n        <Flex\r\n          alignItems={['start', null, 'center']}\r\n          justifyContent={['start', null, 'space-between']}\r\n          flexDirection={['column', null, 'row']}\r\n        >\r\n          <div>\r\n            <Heading scale=\"lg\" mb=\"8px\">\r\n              {t('You havenâ€™t set up your profile yet!')}\r\n            </Heading>\r\n            <Text>{t('You can do this at any time by clicking on your profile picture in the menu')}</Text>\r\n          </div>\r\n          <Button as={Link} to=\"/profile\" id=\"teamsPageSetUpProfile\" mt={['16px', null, 0]}>\r\n            {t('Set up now')}\r\n          </Button>\r\n        </Flex>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default NoProfileCard\r\n","import React from 'react'\r\nimport { Heading, Text } from '@pancakeswap/uikit'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport HeaderWrapper from 'views/Profile/components/HeaderWrapper'\r\nimport NoProfileCard from './NoProfileCard'\r\n\r\nconst TeamHeader = () => {\r\n  const { t } = useTranslation()\r\n  const { isInitialized, profile } = useProfile()\r\n  const showProfileCallout = isInitialized && !profile\r\n\r\n  return (\r\n    <>\r\n      {showProfileCallout && <NoProfileCard />}\r\n      <HeaderWrapper>\r\n        <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\">\r\n          {t('Teams & Profiles')}\r\n        </Heading>\r\n        <Text bold>\r\n          {t('Show off your stats and collectibles with your unique profile. Team features will be revealed soon!')}\r\n        </Text>\r\n      </HeaderWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TeamHeader\r\n","import styled from 'styled-components'\r\nimport { Text } from '@pancakeswap/uikit'\r\n\r\nconst SecondaryCard = styled(Text)`\r\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\r\n  border-radius: 16px;\r\n`\r\n\r\nSecondaryCard.defaultProps = {\r\n  p: '24px',\r\n}\r\n\r\nexport default SecondaryCard\r\n","import React, { ElementType, ReactNode } from 'react'\r\nimport { Flex, Heading, Text, TextProps } from '@pancakeswap/uikit'\r\nimport SecondaryCard from './SecondaryCard'\r\n\r\ninterface StatBoxProps extends TextProps {\r\n  icon: ElementType\r\n  title: ReactNode\r\n  subtitle: ReactNode\r\n  isDisabled?: boolean\r\n}\r\n\r\nconst StatBox: React.FC<StatBoxProps> = ({ icon: Icon, title, subtitle, isDisabled = false, ...props }) => {\r\n  return (\r\n    <SecondaryCard {...props}>\r\n      <Flex alignItems=\"start\">\r\n        <Icon width=\"44px\" mr=\"24px\" color={isDisabled ? 'textDisabled' : 'currentColor'} />\r\n        <div>\r\n          <Heading as=\"h3\" scale=\"xl\" color={isDisabled ? 'textDisabled' : 'text'}>\r\n            {title}\r\n          </Heading>\r\n          <Text textTransform=\"uppercase\" color={isDisabled ? 'textDisabled' : 'textSubtle'} fontSize=\"12px\" bold>\r\n            {subtitle}\r\n          </Text>\r\n        </div>\r\n      </Flex>\r\n    </SecondaryCard>\r\n  )\r\n}\r\n\r\nexport default StatBox\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardHeader, CardBody, CommunityIcon, Heading, PrizeIcon, Text } from '@pancakeswap/uikit'\r\nimport { Team } from 'config/constants/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ComingSoon from 'views/Profile/components/ComingSoon'\r\nimport StatBox from 'views/Profile/components/StatBox'\r\n\r\ninterface TeamCardProps {\r\n  team: Team\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  padding-top: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    padding-top: 24px;\r\n  }\r\n`\r\n\r\nconst Avatar = styled.img`\r\n  border-radius: 50%;\r\n  height: 64px;\r\n  margin-top: -12px;\r\n  width: 64px;\r\n  border: solid 2px white;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    height: 128px;\r\n    margin-top: -24px;\r\n    width: 128px;\r\n  }\r\n`\r\n\r\nconst AvatarWrap = styled.div`\r\n  margin-bottom: 8px;\r\n  text-align: center;\r\n`\r\n\r\nconst StyledCard = styled(Card)`\r\n  overflow: visible;\r\n`\r\n\r\nconst StyledCardHeader = styled(CardHeader)<{ bg: string }>`\r\n  position: relative;\r\n  background: url(${({ bg }) => bg});\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-size: cover;\r\n  padding-top: 0;\r\n  text-align: center;\r\n`\r\n\r\nconst TeamName = styled(Heading).attrs({ as: 'h2' })`\r\n  font-size: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    font-size: 40px;\r\n  }\r\n`\r\n\r\nconst StatRow = styled.div`\r\n  display: grid;\r\n  grid-gap: 16px;\r\n  grid-template-columns: 1fr;\r\n  margin-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-gap: 32px;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    margin-bottom: 32px;\r\n  }\r\n`\r\n\r\nconst TeamCard: React.FC<TeamCardProps> = ({ team }) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <StyledCard>\r\n        <StyledCardHeader bg={`/images/teams/${team.background}`}>\r\n          <AvatarWrap>\r\n            <Avatar src={`/images/teams/${team.images.md}`} alt=\"team avatar\" />\r\n          </AvatarWrap>\r\n          <TeamName color={team.textColor}>{team.name}</TeamName>\r\n          <Text as=\"p\" color={team.textColor}>\r\n            {t(team.description)}\r\n          </Text>\r\n        </StyledCardHeader>\r\n        <CardBody>\r\n          <StatRow>\r\n            <StatBox icon={CommunityIcon} title={team.users} subtitle={t('Active Members')} />\r\n            <StatBox icon={PrizeIcon} title={t('Coming Soon')} subtitle={t('Team Points')} isDisabled />\r\n          </StatRow>\r\n          <Heading as=\"h3\">{t('Team Achievements')}</Heading>\r\n          <ComingSoon />\r\n        </CardBody>\r\n      </StyledCard>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default TeamCard\r\n","import React from 'react'\r\nimport Page from 'components/Layout/Page'\r\nimport { Link, Redirect, useParams } from 'react-router-dom'\r\nimport { ChevronLeftIcon, Flex, Text } from '@pancakeswap/uikit'\r\nimport PageLoader from 'components/Loader/PageLoader'\r\nimport teams from 'config/constants/teams'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useTeam } from 'state/teams/hooks'\r\nimport TeamCard from './components/TeamCard'\r\nimport TeamHeader from './components/TeamHeader'\r\n\r\nconst Team = () => {\r\n  const { id: idStr }: { id: string } = useParams()\r\n  const id = Number(idStr)\r\n  const { t } = useTranslation()\r\n  const isValidTeamId = teams.findIndex((team) => team.id === id) !== -1\r\n  const team = useTeam(id)\r\n\r\n  if (!isValidTeamId) {\r\n    return <Redirect to=\"/404\" />\r\n  }\r\n\r\n  if (!team) {\r\n    return <PageLoader />\r\n  }\r\n\r\n  return (\r\n    <Page>\r\n      <TeamHeader />\r\n      <Flex mb=\"24px\">\r\n        <Link to=\"/teams\">\r\n          <Flex alignItems=\"center\">\r\n            <ChevronLeftIcon color=\"primary\" />\r\n            <Text color=\"primary\">{t('Teams Overview')}</Text>\r\n          </Flex>\r\n        </Link>\r\n      </Flex>\r\n      <TeamCard team={team} />\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Team\r\n"],"sourceRoot":""}