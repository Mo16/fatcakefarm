{"version":3,"sources":["views/Voting/helpers.ts","utils/truncateWalletAddress.ts","views/Voting/config.ts","utils/calls/estimateGas.ts","utils/getGasPrice.ts","utils/calls/farms.ts","utils/calls/pools.ts","components/Tags.tsx","../node_modules/lodash/orderBy.js","../node_modules/lodash/_baseOrderBy.js","../node_modules/lodash/_baseSortBy.js","../node_modules/lodash/_compareMultiple.js","../node_modules/lodash/_compareAscending.js","state/voting/hooks.ts","views/Voting/components/Proposals/tags.tsx","views/Voting/components/CastVoteModal/styles.tsx","views/Voting/components/Layout.tsx","views/Voting/components/CastVoteModal/DetailsView.tsx","views/Voting/hooks/useGetVotingPower.tsx","components/ReactMarkdown/styles.tsx","components/ReactMarkdown/index.tsx","views/Voting/components/CastVoteModal/types.ts","views/Voting/Proposal/Details.tsx","views/Voting/components/TextEllipsis.tsx","views/Voting/Proposal/Results.tsx","views/Voting/components/CastVoteModal/MainView.tsx","views/Voting/components/CastVoteModal/index.tsx","views/Voting/Proposal/Vote.tsx","views/Voting/components/Proposal/VotesLoading.tsx","views/Voting/components/Proposal/Row.tsx","views/Voting/components/Proposal/VoteRow.tsx","views/Voting/Proposal/Votes.tsx","views/Voting/Proposal/index.tsx"],"names":["isCoreProposal","proposal","author","toLowerCase","ADMIN_ADDRESS","filterProposalsByType","proposals","proposalType","ProposalType","COMMUNITY","filter","CORE","ALL","filterProposalsByState","state","generateMetaData","plugins","network","strategies","name","params","symbol","address","getCakeAddress","decimals","generatePayloadData","version","SNAPSHOT_VERSION","timestamp","Date","now","toFixed","space","PANCAKE_SPACE","sendSnaphotData","message","a","fetch","SNAPSHOT_HUB_API","method","headers","Accept","body","JSON","stringify","response","ok","json","error","Error","error_description","data","getVotingPower","account","poolAddresses","block","simpleRpcProvider","getBlockNumber","blockNumber","SNAPSHOT_VOTING_API","calculateVoteResults","votes","reduce","accum","vote","choiceText","choices","choice","getTotalFromVotes","power","BigNumber","metadata","votingPower","plus","BIG_ZERO","truncateWalletAddress","startLength","endLength","substring","length","PROPOSALS_TO_SHOW","IPFS_GATEWAY","VOTE_THRESHOLD","estimateGas","contract","methodName","methodArgs","gasMarginPer10000","rawGasEstimation","gasEstimation","mul","ethers","from","add","div","callWithEstimateGas","overrides","gasLimit","tx","getGasPrice","userGas","store","getState","user","gasPrice","GAS_PRICE_GWEI","default","process","ChainId","MAINNET","toString","testnet","options","DEFAULT_GAS_LIMIT","stakeFarm","masterChefContract","pid","amount","value","times","DEFAULT_TOKEN_DECIMAL","enterStaking","wait","receipt","status","deposit","unstakeFarm","leaveStaking","withdraw","harvestFarm","getActivePools","eligiblePools","pools","pool","sousId","isFinished","undefined","startBlockCalls","map","contractAddress","getAddress","endBlockCalls","multicall","sousChefV2","startBlocks","endBlocks","poolCheck","index","startBlock","endBlock","gte","lte","CoreTag","props","t","useTranslation","variant","outline","startIcon","width","color","mr","CommunityTag","VoteNowTag","SoonTag","ClosedTag","baseOrderBy","require","isArray","module","exports","collection","iteratees","orders","guard","arrayMap","baseGet","baseIteratee","baseMap","baseSortBy","baseUnary","compareMultiple","identity","iteratee","result","key","object","other","array","comparer","sort","compareAscending","objCriteria","criteria","othCriteria","ordersLength","isSymbol","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","useGetProposals","useSelector","voting","Object","values","useGetProposal","proposalId","useGetVotes","_inValid","useGetVotingStateLoadingStatus","voteLoadingStatus","useGetProposalLoadingStatus","proposalLoadingStatus","ProposalStateTag","proposalState","ProposalState","ACTIVE","PENDING","ProposalTypeTag","VotingBox","styled","theme","colors","cardBorder","ModalInner","mb","maxWidth","Layout","mediaQueries","lg","DetailsView","total","cakeBalance","cakeVaultBalance","cakePoolBalance","poolsBalance","cakeBnbLpBalance","as","fontSize","textTransform","bold","toFormat","alignItems","justifyContent","textAlign","initialState","verificationHash","useGetVotingPower","isActive","useWeb3React","useState","setVotingPower","isLoading","setIsLoading","useEffect","prevVotingPower","fetchVotingPower","Table","table","text","ThemedComponent","Title","scale","my","markdownComponents","h1","h2","h3","h4","h5","h6","p","ol","ul","pre","ReactMarkdown","remarkPlugins","gfm","components","ConfirmVoteView","DetailBox","Box","background","Details","startDate","start","endDate","end","href","id","ml","slice","getBscScanLink","snapshot","format","TextEllipsis","Text","Results","results","votingStatus","totalVotes","VotingStateLoadingStatus","IDLE","choiceVotes","totalChoiceVote","progress","eq","toNumber","hasVoted","some","voter","mt","title","primaryStep","toLocaleString","minimumFractionDigits","maximumFractionDigits","LOADING","count","height","MainView","isPending","onConfirm","onViewDetails","onDismiss","label","onClick","style","cursor","endIcon","spin","disabled","CastVoteModal","onSuccess","MAIN","view","setView","modalIsOpen","setModalIsOpen","setIsPending","toastError","useToast","library","useWeb3Provider","useTheme","isStartView","handleBack","DETAILS","handleDismiss","handleConfirmVote","voteMsg","type","SnapshotCommand","VOTE","payload","signMessage","sig","msg","console","onBack","hideCloseButton","headerBackground","gradients","cardHeader","Choice","isChecked","isDisabled","ChoiceText","Vote","setVote","toastSuccess","dispatch","useAppDispatch","handleSuccess","fetchVotes","Number","useModal","presentCastVoteModal","flexShrink","checked","onChange","ConnectWalletButton","Row","Flex","StyledSkeleton","Skeleton","VotesLoading","AddressColumn","attrs","ChoiceColumn","VotingPowerColumn","Grid","sm","VoteRow","isVoter","hasVotingPower","parseVotePower","incomingVote","parseFloat","Votes","showAll","setShowAll","orderedVotes","orderBy","displayVotes","py","px","Proposal","useParams","hasAccountVoted","isPageLoading","fetchProposal","verifyVotes","getVotes","Container","Link","to","PageLoader"],"mappings":"uiBAQaA,EAAiB,SAACC,GAC7B,OAAOA,EAASC,OAAOC,gBAAkBC,IAAcD,eAG5CE,EAAwB,SAACC,EAAuBC,GAC3D,OAAQA,GACN,KAAKC,IAAaC,UAChB,OAAOH,EAAUI,QAAO,SAACT,GAAD,OAAeD,EAAeC,MACxD,KAAKO,IAAaG,KAChB,OAAOL,EAAUI,QAAO,SAACT,GAAD,OAAcD,EAAeC,MACvD,KAAKO,IAAaI,IAClB,QACE,OAAON,IAIAO,EAAyB,SAACP,EAAuBQ,GAC5D,OAAOR,EAAUI,QAAO,SAACT,GAAD,OAAcA,EAASa,QAAUA,MAY9CC,EAAmB,WAC9B,MAAO,CACLC,QAAS,GACTC,QAAS,GACTC,WAAY,CAAC,CAAEC,KAAM,OAAQC,OAAQ,CAAEC,OAAQ,OAAQC,QAASC,cAAkBC,SAAU,QAOnFC,EAAsB,WACjC,MAAO,CACLC,QAASC,IACTC,WAAYC,KAAKC,MAAQ,KAAKC,UAC9BC,MAAOC,MAOEC,EAAe,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,sEACNC,MAAMC,IAAkB,CAC7CC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUT,KAPM,WACvBU,EADuB,QAUfC,GAVe,gCAWPD,EAASE,OAXF,aAWrBC,EAXqB,OAYrB,IAAIC,MAAJ,OAAUD,QAAV,IAAUA,OAAV,EAAUA,EAAOE,mBAZI,wBAeVL,EAASE,OAfC,eAevBI,EAfuB,yBAgBtBA,GAhBsB,4CAAH,sDAmBfC,EAAc,uCAAG,WAAOC,EAAiBC,EAAyBC,GAAjD,mBAAAnB,EAAA,8DACRmB,EADQ,qCACQC,IAAkBC,iBAD1B,iCACtBC,EADsB,cAELrB,MAAM,GAAD,OAAIsB,IAAJ,UAAiC,CAC3DpB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBE,KAAMC,KAAKC,UAAU,CACnBtB,QAAS+B,EACTE,MAAOG,EACPJ,oBAVwB,cAEtBT,EAFsB,iBAaTA,EAASE,OAbA,eAatBI,EAbsB,yBAcrBA,EAAKA,MAdgB,4CAAH,0DAiBdS,EAAuB,SAACC,GACnC,OAAOA,EAAMC,QAAO,SAACC,EAAOC,GAC1B,IAAMC,EAAaD,EAAK/D,SAASiE,QAAQF,EAAKG,OAAS,GAEvD,OAAO,2BACFJ,GADL,kBAEGE,EAAaF,EAAME,GAAN,sBAAwBF,EAAME,IAA9B,CAA2CD,IAAQ,CAACA,OAEnE,KAGQI,EAAoB,SAACP,GAChC,OAAOA,EAAMC,QAAO,SAACC,EAAOC,GAAU,IAAD,EAC7BK,EAAQ,IAAIC,IAAJ,UAAcN,EAAKO,gBAAnB,aAAc,EAAeC,aAC3C,OAAOT,EAAMU,KAAKJ,KACjBK,O,kCCvGUC,IAJe,SAACrD,GAAqD,IAApCsD,EAAmC,uDAArB,EAAGC,EAAkB,uDAAN,EAC3E,MAAM,GAAN,OAAUvD,EAAQwD,UAAU,EAAGF,GAA/B,cAAiDtD,EAAQwD,UAAUxD,EAAQyD,OAASF,M,kCCJtF,4MAAO,IAAMG,EAAoB,GACpB5E,EAAgB,6CAChB6E,EAAe,+BACftD,EAAmB,QACnBM,EAAgB,WAChBiD,EAAiB,I,+PCKjBC,EAAW,uCAAG,WACzBC,EACAC,EACAC,EACAC,GAJyB,mBAAAnD,EAAA,yDAMpBgD,EAASC,GANW,sBAOjB,IAAIpC,MAAJ,iBAAoBoC,EAApB,6BAAmDD,EAAS9D,UAP3C,wBASM,EAAA8D,EAASD,aAAYE,GAArB,oBAAoCC,IAT1C,cASnBE,EATmB,OAWnBC,EAAgBD,EACnBE,IAAIC,IAAOrB,UAAUsB,KAAK,KAAOC,IAAIF,IAAOrB,UAAUsB,KAAKL,KAC3DO,IAAIH,IAAOrB,UAAUsB,KAAK,MAbJ,kBAclBH,GAdkB,2CAAH,4DAyBXM,EAAmB,uCAAG,WACjCX,EACAC,GAFiC,mCAAAjD,EAAA,6DAGjCkD,EAHiC,+BAGb,GACpBU,EAJiC,+BAIV,GACvBT,EALiC,+BAKb,IAEdE,EAAgBN,EAAYC,EAAUC,EAAYC,EAAYC,GAPnC,SAQhBH,EAASC,GAAT,MAAAD,EAAQ,YAAgBE,GAAhB,qBACvBW,SAAUR,GACPO,MAV4B,cAQ3BE,EAR2B,yBAY1BA,GAZ0B,2CAAH,wD,iDCrBjBC,EAPK,WAClB,IAEMC,EADQC,IAAMC,WACEC,KAAKC,UAAYC,IAAeC,QACtD,MAHgBC,OAGGC,IAAQC,QAAQC,WAAaV,EAAUK,IAAeM,SCPrEC,EAAU,CACdf,SAAUgB,KAGCC,EAAS,uCAAG,WAAOC,EAAoBC,EAAKC,GAAhC,yBAAAjF,EAAA,yDACjBoE,EAAWL,IACXmB,EAAQ,IAAIhD,IAAU+C,GAAQE,MAAMC,KAAuBV,WACrD,IAARM,EAHmB,iCAIJD,EAAmBM,aAAaH,EAAhC,2BAA4CN,GAA5C,IAAqDR,cAJjD,cAIfN,EAJe,gBAKCA,EAAGwB,OALJ,cAKfC,EALe,yBAMdA,EAAQC,QANM,yBASNT,EAAmBU,QAAQT,EAAKE,EAAhC,2BAA4CN,GAA5C,IAAqDR,cAT/C,eASjBN,EATiB,iBAUDA,EAAGwB,OAVF,eAUjBC,EAViB,yBAWhBA,EAAQC,QAXQ,4CAAH,0DAcTE,EAAW,uCAAG,WAAOX,EAAoBC,EAAKC,GAAhC,yBAAAjF,EAAA,yDACnBoE,EAAWL,IACXmB,EAAQ,IAAIhD,IAAU+C,GAAQE,MAAMC,KAAuBV,WACrD,IAARM,EAHqB,iCAIND,EAAmBY,aAAaT,EAAhC,2BAA4CN,GAA5C,IAAqDR,cAJ/C,cAIjBN,EAJiB,gBAKDA,EAAGwB,OALF,cAKjBC,EALiB,yBAMhBA,EAAQC,QANQ,yBASRT,EAAmBa,SAASZ,EAAKE,EAAjC,2BAA6CN,GAA7C,IAAsDR,cAT9C,eASnBN,EATmB,iBAUHA,EAAGwB,OAVA,eAUnBC,EAVmB,yBAWlBA,EAAQC,QAXU,4CAAH,0DAcXK,EAAW,uCAAG,WAAOd,EAAoBC,GAA3B,uBAAAhF,EAAA,yDACnBoE,EAAWL,IACL,IAARiB,EAFqB,gCAGND,EAAmBY,aAAa,IAAhC,2BAA0Cf,GAA1C,IAAmDR,cAH7C,cAGjBN,EAHiB,gBAIDA,EAAGwB,OAJF,cAIjBC,EAJiB,yBAKhBA,EAAQC,QALQ,wBAQRT,EAAmBU,QAAQT,EAAK,IAAhC,2BAA0CJ,GAA1C,IAAmDR,cAR3C,eAQnBN,EARmB,iBASHA,EAAGwB,OATA,eASnBC,EATmB,yBAUlBA,EAAQC,QAVU,4CAAH,wD,0CCzBXM,EAAc,uCAAG,WAAO3E,GAAP,yBAAAnB,EAAA,yDACtB+F,EAAgBC,IACnB1H,QAAO,SAAC2H,GAAD,OAA0B,IAAhBA,EAAKC,UACtB5H,QAAO,SAAC2H,GAAD,OAA8B,IAApBA,EAAKE,iBAA4CC,IAApBH,EAAKE,cAH1B,KAIRhF,EAJQ,qCAIQC,IAAkBC,iBAJ1B,iCAItBC,EAJsB,KAKtB+E,EAAkBN,EAAcO,KAAI,gBAAGC,EAAH,EAAGA,gBAAH,MAA0B,CAClErH,QAASsH,YAAWD,GACpBxH,KAAM,iBAEF0H,EAAgBV,EAAcO,KAAI,gBAAGC,EAAH,EAAGA,gBAAH,MAA0B,CAChErH,QAASsH,YAAWD,GACpBxH,KAAM,oBAXoB,UAaF2H,YAAUC,EAAYN,GAbpB,eAatBO,EAbsB,iBAcJF,YAAUC,EAAYF,GAdlB,eActBI,EAdsB,yBAgBrBd,EAAcrE,QAAO,SAACC,EAAOmF,EAAWC,GAC7C,IAAMC,EAAaJ,EAAYG,GAAS,IAAI7E,IAAU0E,EAAYG,IAAU,KACtEE,EAAWJ,EAAUE,GAAS,IAAI7E,IAAU2E,EAAUE,IAAU,KAEtE,OAAKC,GAAeC,EAIhBD,EAAWE,IAAI5F,IAAgB2F,EAASE,IAAI7F,GACvCK,EAGH,GAAN,mBAAWA,GAAX,CAAkBmF,IAPTnF,IAQR,KA7ByB,4CAAH,uD,oPCGrByF,EAA8B,SAACC,GACnC,IAAQC,EAAMC,cAAND,EACR,OACE,cAAC,KAAD,yBAAKE,QAAQ,YAAYC,SAAO,EAACC,UAAW,cAAC,KAAD,CAAcC,MAAM,OAAOC,MAAM,YAAYC,GAAG,SAAcR,GAA1G,aACGC,EAAE,YAKHQ,EAAmC,SAACT,GACxC,IAAQC,EAAMC,cAAND,EACR,OACE,cAAC,KAAD,yBAAKE,QAAQ,UAAUC,SAAO,EAACC,UAAW,cAAC,IAAD,CAAeC,MAAM,OAAOC,MAAM,UAAUC,GAAG,SAAcR,GAAvG,aACGC,EAAE,iBAgCHS,EAAiC,SAACV,GACtC,IAAQC,EAAMC,cAAND,EACR,OACE,cAAC,KAAD,yBAAKE,QAAQ,UAAUE,UAAW,cAAC,KAAD,CAAUC,MAAM,OAAOC,MAAM,UAAUC,GAAG,SAAcR,GAA1F,aACGC,EAAE,gBAKHU,EAA8B,SAACX,GACnC,IAAQC,EAAMC,cAAND,EACR,OACE,cAAC,KAAD,yBAAKE,QAAQ,UAAUE,UAAW,cAAC,KAAD,CAAWC,MAAM,OAAOC,MAAM,UAAUC,GAAG,SAAcR,GAA3F,aACGC,EAAE,YAKHW,EAAgC,SAACZ,GACrC,IAAQC,EAAMC,cAAND,EACR,OACE,cAAC,KAAD,yBAAKE,QAAQ,eAAeE,UAAW,cAAC,IAAD,CAAWC,MAAM,OAAOC,MAAM,eAAeC,GAAG,SAAcR,GAArG,aACGC,EAAE,e,qBCjFT,IAAIY,EAAcC,EAAQ,MACtBC,EAAUD,EAAQ,KA6CtBE,EAAOC,QAdP,SAAiBC,EAAYC,EAAWC,EAAQC,GAC9C,OAAkB,MAAdH,EACK,IAEJH,EAAQI,KACXA,EAAyB,MAAbA,EAAoB,GAAK,CAACA,IAGnCJ,EADLK,EAASC,OAAQtC,EAAYqC,KAE3BA,EAAmB,MAAVA,EAAiB,GAAK,CAACA,IAE3BP,EAAYK,EAAYC,EAAWC,M,qBC3C5C,IAAIE,EAAWR,EAAQ,KACnBS,EAAUT,EAAQ,KAClBU,EAAeV,EAAQ,KACvBW,EAAUX,EAAQ,KAClBY,EAAaZ,EAAQ,MACrBa,EAAYb,EAAQ,KACpBc,EAAkBd,EAAQ,MAC1Be,EAAWf,EAAQ,KACnBC,EAAUD,EAAQ,KAwCtBE,EAAOC,QA7BP,SAAqBC,EAAYC,EAAWC,GAExCD,EADEA,EAAU7F,OACAgG,EAASH,GAAW,SAASW,GACvC,OAAIf,EAAQe,GACH,SAASjE,GACd,OAAO0D,EAAQ1D,EAA2B,IAApBiE,EAASxG,OAAewG,EAAS,GAAKA,IAGzDA,KAGG,CAACD,GAGf,IAAInC,GAAS,EACbyB,EAAYG,EAASH,EAAWQ,EAAUH,IAE1C,IAAIO,EAASN,EAAQP,GAAY,SAASrD,EAAOmE,EAAKd,GAIpD,MAAO,CAAE,SAHMI,EAASH,GAAW,SAASW,GAC1C,OAAOA,EAASjE,MAEa,QAAW6B,EAAO,MAAS7B,MAG5D,OAAO6D,EAAWK,GAAQ,SAASE,EAAQC,GACzC,OAAON,EAAgBK,EAAQC,EAAOd,Q,mBCxB1CJ,EAAOC,QAVP,SAAoBkB,EAAOC,GACzB,IAAI9G,EAAS6G,EAAM7G,OAGnB,IADA6G,EAAME,KAAKD,GACJ9G,KACL6G,EAAM7G,GAAU6G,EAAM7G,GAAQuC,MAEhC,OAAOsE,I,qBCjBT,IAAIG,EAAmBxB,EAAQ,MA2C/BE,EAAOC,QA3BP,SAAyBgB,EAAQC,EAAOd,GAOtC,IANA,IAAI1B,GAAS,EACT6C,EAAcN,EAAOO,SACrBC,EAAcP,EAAMM,SACpBlH,EAASiH,EAAYjH,OACrBoH,EAAetB,EAAO9F,SAEjBoE,EAAQpE,GAAQ,CACvB,IAAIyG,EAASO,EAAiBC,EAAY7C,GAAQ+C,EAAY/C,IAC9D,GAAIqC,EACF,OAAIrC,GAASgD,EACJX,EAGFA,GAAmB,QADdX,EAAO1B,IACiB,EAAI,GAU5C,OAAOuC,EAAOvC,MAAQwC,EAAMxC,Q,qBCxC9B,IAAIiD,EAAW7B,EAAQ,KAwCvBE,EAAOC,QA9BP,SAA0BpD,EAAOqE,GAC/B,GAAIrE,IAAUqE,EAAO,CACnB,IAAIU,OAAyB7D,IAAVlB,EACfgF,EAAsB,OAAVhF,EACZiF,EAAiBjF,IAAUA,EAC3BkF,EAAcJ,EAAS9E,GAEvBmF,OAAyBjE,IAAVmD,EACfe,EAAsB,OAAVf,EACZgB,EAAiBhB,IAAUA,EAC3BiB,EAAcR,EAAST,GAE3B,IAAMe,IAAcE,IAAgBJ,GAAelF,EAAQqE,GACtDa,GAAeC,GAAgBE,IAAmBD,IAAcE,GAChEN,GAAaG,GAAgBE,IAC5BN,GAAgBM,IACjBJ,EACH,OAAO,EAET,IAAMD,IAAcE,IAAgBI,GAAetF,EAAQqE,GACtDiB,GAAeP,GAAgBE,IAAmBD,IAAcE,GAChEE,GAAaL,GAAgBE,IAC5BE,GAAgBF,IACjBI,EACH,OAAQ,EAGZ,OAAO,I,kCCrCT,sLAIaE,EAAkB,WAC7B,IAAMvM,EAAYwM,aAAY,SAAChM,GAAD,OAAkBA,EAAMiM,OAAOzM,aAC7D,OAAO0M,OAAOC,OAAO3M,IAGV4M,EAAiB,SAACC,GAE7B,OADiBL,aAAY,SAAChM,GAAD,OAAkBA,EAAMiM,OAAOzM,UAAU6M,OAI3DC,EAAc,SAACD,GAC1B,IAAMtJ,EAAQiJ,aAAY,SAAChM,GAAD,OAAkBA,EAAMiM,OAAOlJ,MAAMsJ,MAC/D,OAAOtJ,EAAQA,EAAMnD,QAAO,SAACsD,GAAD,OAA4B,IAAlBA,EAAKqJ,YAAqB,IAGrDC,EAAiC,WAE5C,OADqBR,aAAY,SAAChM,GAAD,OAAkBA,EAAMiM,OAAOQ,sBAIrDC,EAA8B,WAEzC,OADqBV,aAAY,SAAChM,GAAD,OAAkBA,EAAMiM,OAAOU,2B,kMChBrDC,EAAoD,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,cAAkBlE,EAAY,iBAChG,OAAIkE,IAAkBC,IAAcC,OAC3B,cAAC,IAAD,eAAgBpE,IAGrBkE,IAAkBC,IAAcE,QAC3B,cAAC,IAAD,eAAarE,IAGf,cAAC,IAAD,eAAeA,KAOXsE,EAAkD,SAAC,GAAkC,IAAhC/N,EAA+B,EAA/BA,eAAmByJ,EAAY,iBAC/F,OAAIzJ,EACK,cAAC,IAAD,eAAayJ,IAGf,cAAC,IAAD,eAAkBA,M,uJC1BduE,EAAYC,IAAOnI,IAAV,wNAEA,qBAAGoI,MAAkBC,OAAOC,cASrCC,EAAiC,SAAC5E,GAC7C,OAAO,cAAC,IAAD,aAAK6E,GAAG,OAAOC,SAAS,SAAY9E,M,gDCdvC+E,E,KAASP,EAAOnI,IAAV,yLAMR,qBAAGoI,MAAkBO,aAAaC,MAKvBF,O,kCCbf,yCA8EeG,IA/DiC,SAAC,GAO1C,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,YACAC,EAII,EAJJA,iBACAC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,aACAC,EACI,EADJA,iBAEQvF,EAAMC,cAAND,EAER,OACE,eAAC,IAAD,CAAY4E,GAAG,IAAf,UACE,cAAC,KAAD,CAAMY,GAAG,IAAIZ,GAAG,OAAOa,SAAS,OAAOnF,MAAM,aAA7C,SACGN,EACC,qKAGJ,cAAC,KAAD,CAAMM,MAAM,YAAYoF,cAAc,YAAYd,GAAG,MAAMe,MAAI,EAACF,SAAS,OAAzE,SACGzF,EAAE,cAEL,eAAC,IAAD,WACE,cAAC,KAAD,CAAMM,MAAM,YAAZ,SAAyBN,EAAE,uBAC3B,cAAC,KAAD,CAAM2F,MAAI,EAACF,SAAS,OAApB,SACGP,EAAMU,SAAS,QAGpB,cAAC,KAAD,CAAMtF,MAAM,YAAYoF,cAAc,YAAYd,GAAG,MAAMe,MAAI,EAACF,SAAS,OAAzE,SACGzF,EAAE,wBAEL,eAAC,IAAD,CAAM6F,WAAW,SAASC,eAAe,gBAAgBlB,GAAG,MAA5D,UACE,cAAC,KAAD,CAAMtE,MAAM,aAAamF,SAAS,OAAlC,SACGzF,EAAE,YAEL,cAAC,KAAD,CAAM+F,UAAU,QAAhB,SAAyBZ,EAAYS,SAAS,QAEhD,eAAC,IAAD,CAAMC,WAAW,SAASC,eAAe,gBAAgBlB,GAAG,MAA5D,UACE,cAAC,KAAD,CAAMtE,MAAM,aAAamF,SAAS,OAAlC,SACGzF,EAAE,sBAEL,cAAC,KAAD,CAAM+F,UAAU,QAAhB,SAAyBV,EAAgBO,SAAS,QAEpD,eAAC,IAAD,CAAMC,WAAW,SAASC,eAAe,gBAAgBlB,GAAG,MAA5D,UACE,cAAC,KAAD,CAAMtE,MAAM,aAAamF,SAAS,OAAlC,SACGzF,EAAE,oBAEL,cAAC,KAAD,CAAM+F,UAAU,QAAhB,SAAyBX,EAAiBQ,SAAS,QAErD,eAAC,IAAD,CAAMC,WAAW,SAASC,eAAe,gBAAgBlB,GAAG,MAA5D,UACE,cAAC,KAAD,CAAMtE,MAAM,aAAamF,SAAS,OAAlC,SACGzF,EAAE,uBAEL,cAAC,KAAD,CAAM+F,UAAU,QAAhB,SAAyBT,EAAaM,SAAS,QAEjD,eAAC,IAAD,CAAMC,WAAW,SAASC,eAAe,gBAAgBlB,GAAG,MAA5D,UACE,cAAC,KAAD,CAAMtE,MAAM,aAAamF,SAAS,OAAlC,SACGzF,EAAE,iBAEL,cAAC,KAAD,CAAM+F,UAAU,QAAhB,SAAyBR,EAAiBK,SAAS,a,0JCrDrDI,EAAsB,CAC1BC,iBAAkB,KAClBd,YAAanK,IACboK,iBAAkBpK,IAClBqK,gBAAiBrK,IACjBsK,aAActK,IACduK,iBAAkBvK,IAClBkK,MAAOlK,KAmDMkL,IAhDW,SAACrM,GAAqE,IAArDsM,IAAoD,yDAC7F,EAAoBC,cAAZzM,EAAR,EAAQA,QACR,EAAsC0M,mBAASL,GAA/C,mBAAOlL,EAAP,KAAoBwL,EAApB,KACA,EAAkCD,qBAAW1M,GAA7C,mBAAO4M,EAAP,KAAkBC,EAAlB,KA0CA,OAxCAC,qBAAU,WAmCJ9M,GAAWwM,GAlCO,uCAAG,gDAAAzN,EAAA,yDACvB8N,GAAa,GADU,cAID3M,EAJC,qCAIeC,IAAkBC,iBAJjC,iCAIfC,EAJe,eAKOwE,YAAexE,GALtB,eAKfyE,EALe,OAMf7E,EAAgB6E,EAAcO,KAAI,gBAAGC,EAAH,EAAGA,gBAAH,OAAyBC,YAAWD,MANvD,UAeXvF,YAAeC,EAASC,EAAeI,GAf5B,iBAQnBmL,EARmB,EAQnBA,YACAI,EATmB,EASnBA,iBACAF,EAVmB,EAUnBA,gBACAH,EAXmB,EAWnBA,MACAI,EAZmB,EAYnBA,aACAF,EAbmB,EAanBA,iBACAa,EAdmB,EAcnBA,iBAGEE,GACFG,GAAe,SAACI,GAAD,mBAAC,eACXA,GADU,IAEbT,mBACAd,YAAa,IAAIvK,IAAUuK,GAC3BI,iBAAkB,IAAI3K,IAAU2K,GAChCF,gBAAiB,IAAIzK,IAAUyK,GAC/BC,aAAc,IAAI1K,IAAU0K,GAC5BF,iBAAkB,IAAIxK,IAAUwK,GAChCF,MAAO,IAAItK,IAAUsK,QA1BJ,yBA8BrBsB,GAAa,GA9BQ,2EAAH,oDAmCpBG,KAED,CAAChN,EAASE,EAAOyM,EAAgBH,EAAUK,IAEvC,2BAAK1L,GAAZ,IAAyByL,gB,6HCrErBK,EAAQrC,IAAOsC,MAAV,mJAOE,qBAAGrC,MAAkBC,OAAOqC,QAKnCC,EAAkBxC,IAAOnI,IAAV,gIACV,qBAAGoI,MAAkBC,OAAOqC,QAiBjCE,EAAQ,SAACjH,GACb,OAAO,cAAC,IAAD,aAASyF,GAAG,KAAKyB,MAAM,KAAKC,GAAG,QAAWnH,KAuBpCoH,EApB2D,CACxEC,GAAIJ,EACJK,GAAIL,EACJM,GAAIN,EACJO,GAAIP,EACJQ,GAAIR,EACJS,GAAIT,EACJU,EAAG,SAAC3H,GACF,OAAO,cAAC,KAAD,aAAMyF,GAAG,IAAI0B,GAAG,QAAWnH,KAEpC8G,MAAOD,EACPe,GAAI,SAAC5H,GACH,OAAO,cAACgH,EAAD,aAAiBvB,GAAG,MAASzF,KAEtC6H,GAAI,SAAC7H,GACH,OAAO,cAACgH,EAAD,aAAiBvB,GAAG,MAASzF,KAEtC8H,IA7BUtD,IAAOsD,IAAV,iIACE,qBAAGrD,MAAkBC,OAAOqC,SCnBxBgB,IAJuC,SAAC/H,GACrD,OAAO,cAAC,IAAD,aAAkBgI,cAAe,CAACC,KAAMC,WAAYd,GAAwBpH,M,iDCJzEmI,E,+NCaNC,EAAY5D,YAAO6D,IAAP7D,CAAH,wGACO,qBAAGC,MAAkBC,OAAO4D,cAC5B,qBAAG7D,MAAkBC,OAAOC,cAuDnC4D,EAnDyB,SAAC,GAAkB,IAAhB/R,EAAe,EAAfA,SACjCyJ,EAAMC,cAAND,EACFuI,EAAY,IAAIpQ,KAAsB,IAAjB5B,EAASiS,OAC9BC,EAAU,IAAItQ,KAAoB,IAAf5B,EAASmS,KAElC,OACE,eAAC,IAAD,CAAM9D,GAAG,OAAT,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAASY,GAAG,KAAKyB,MAAM,KAAvB,SACGjH,EAAE,eAGP,eAAC,IAAD,WACE,eAAC,IAAD,CAAM6F,WAAW,SAASjB,GAAG,MAA7B,UACE,cAAC,KAAD,CAAMtE,MAAM,aAAZ,SAA0BN,EAAE,gBAC5B,cAAC,KAAD,CAAc2I,KAAI,UAAKpN,IAAL,YAAqBhF,EAASqS,IAAMC,GAAG,MAAzD,SACGtS,EAASqS,GAAGE,MAAM,EAAG,QAG1B,eAAC,IAAD,CAAMjD,WAAW,SAASjB,GAAG,MAA7B,UACE,cAAC,KAAD,CAAMtE,MAAM,aAAZ,SAA0BN,EAAE,aAC5B,cAAC,KAAD,CAAc2I,KAAMI,YAAexS,EAASC,OAAQ,WAAYqS,GAAG,MAAnE,SACG5N,YAAsB1E,EAASC,aAGpC,eAAC,IAAD,CAAMqP,WAAW,SAASjB,GAAG,OAA7B,UACE,cAAC,KAAD,CAAMtE,MAAM,aAAZ,SAA0BN,EAAE,cAC5B,cAAC,KAAD,CAAc2I,KAAMI,YAAexS,EAASyS,SAAU,SAAUH,GAAG,MAAnE,SACGtS,EAASyS,cAGd,eAACb,EAAD,CAAWT,EAAE,OAAb,UACE,cAAC,IAAD,CAAkBzD,cAAe1N,EAASa,MAAOwN,GAAG,QACpD,eAAC,IAAD,CAAMiB,WAAW,SAAjB,UACE,cAAC,KAAD,CAAMvF,MAAM,aAAamF,SAAS,OAAlC,SACGzF,EAAE,gBAEL,cAAC,KAAD,CAAM6I,GAAG,MAAT,SAAgBI,kBAAOV,EAAW,yBAEpC,eAAC,IAAD,CAAM1C,WAAW,SAAjB,UACE,cAAC,KAAD,CAAMvF,MAAM,aAAamF,SAAS,OAAlC,SACGzF,EAAE,cAEL,cAAC,KAAD,CAAM6I,GAAG,MAAT,SAAgBI,kBAAOR,EAAS,mC,mBCvD7BS,EANM3E,YAAO4E,KAAP5E,CAAH,qGCuFH6E,EA/DyB,SAAC,GAAwB,IAAtB5O,EAAqB,EAArBA,QAASL,EAAY,EAAZA,MAC1C6F,EAAMC,cAAND,EACFqJ,EAAUnP,YAAqBC,GAC/BmP,EAAe1F,cACbjK,EAAYyM,cAAZzM,QACF4P,EAAa7O,YAAkBP,GAErC,OACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAASqL,GAAG,KAAKyB,MAAM,KAAvB,SACGjH,EAAE,uBAGP,eAAC,IAAD,WACGsJ,IAAiBE,IAAyBC,MACzCjP,EAAQwE,KAAI,SAACvE,EAAQgF,GACnB,IAAMiK,EAAcL,EAAQ5O,IAAW,GACjCkP,EAAkBjP,YAAkBgP,GAEpCE,EAAWL,EAAWM,GAAG,GAAK,EAAIF,EAAgBvN,IAAImN,GAAY1L,MAAM,KAAKiM,WAC7EC,EAAWL,EAAYM,MAAK,SAAC1P,GACjC,OAAOX,GAAWW,EAAK2P,MAAMxT,gBAAkBkD,EAAQlD,iBAGzD,OACE,eAAC,IAAD,CAAkByT,GAAIzK,EAAQ,EAAI,OAAS,MAA3C,UACE,eAAC,IAAD,CAAMoG,WAAW,SAASjB,GAAG,MAA7B,UACE,cAAC,EAAD,CAAcA,GAAG,MAAMuF,MAAO1P,EAA9B,SACGA,IAEFsP,GACC,eAAC,KAAD,CAAK7J,QAAQ,UAAUC,SAAO,EAAC0I,GAAG,MAAlC,UACE,cAAC,IAAD,CAAqBtI,GAAG,QAD1B,IACoCP,EAAE,eAI1C,cAAC,IAAD,CAAK4E,GAAG,MAAR,SACE,cAAC,KAAD,CAAUwF,YAAaR,EAAU3C,MAAM,SAEzC,eAAC,IAAD,CAAMpB,WAAW,SAASC,eAAe,gBAAzC,UACE,cAAC,KAAD,CAAMxF,MAAM,aAAZ,SAA0BN,EAAE,gBAAiB,CAAEkF,MAAOyE,EAAgB/D,SAAS,OAC/E,eAAC,KAAD,WACGgE,EAASS,oBAAevL,EAAW,CAAEwL,sBAAuB,EAAGC,sBAAuB,IADzF,YAhBM9P,MAwBf6O,IAAiBE,IAAyBgB,SACzC3M,IAAMrD,EAAQa,QAAQ2D,KAAI,SAACyL,EAAOhL,GAChC,OACE,cAAC,IAAD,CAAiByK,GAAIzK,EAAQ,EAAI,OAAS,MAA1C,SACE,cAAC,KAAD,CAAUiL,OAAO,OAAO9F,GAAG,SADnB6F,a,qFH9EZvC,K,YAAAA,E,mBAAAA,M,qCI2EGyC,GAxD2B,SAAC,GAQpC,IAPLrQ,EAOI,EAPJA,KACA4K,EAMI,EANJA,MACA0F,EAKI,EALJA,UACArE,EAII,EAJJA,UACAsE,EAGI,EAHJA,UACAC,EAEI,EAFJA,cACAC,EACI,EADJA,UAEQ/K,EAAMC,cAAND,EAER,OACE,qCACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAMM,MAAM,YAAYsE,GAAG,MAAMc,cAAc,YAAYD,SAAS,OAAOE,MAAI,EAA/E,SACG3F,EAAE,gBAEL,cAAC,EAAD,CAAc2F,MAAI,EAACF,SAAS,OAAOb,GAAG,MAAMuF,MAAO7P,EAAK0Q,MAAxD,SACG1Q,EAAK0Q,QAER,cAAC,KAAD,CAAM1K,MAAM,YAAYsE,GAAG,MAAMc,cAAc,YAAYD,SAAS,OAAOE,MAAI,EAA/E,SACG3F,EAAE,uBAEJuG,EACC,cAAC,KAAD,CAAUmE,OAAO,OAAO9F,GAAG,SAE3B,eAAC,KAAD,CAAWqG,QAASH,EAAeI,MAAO,CAAEC,OAAQ,WAApD,UACE,cAAC,KAAD,CAAMxF,MAAI,EAACF,SAAS,OAApB,SACGP,EAAMU,SAAS,KAElB,cAAC,KAAD,CAAYqB,MAAM,KAAK/G,QAAQ,OAA/B,SACE,cAAC,IAAD,CAAkBG,MAAM,cAI9B,cAAC,KAAD,CAAMmF,GAAG,IAAIlF,MAAM,aAAamF,SAAS,OAAzC,SACGzF,EAAE,0FAGP,cAAC,IAAD,CACEuG,UAAWqE,EACXQ,QAASR,EAAY,cAAC,IAAD,CAAeS,MAAI,EAAC/K,MAAM,iBAAoB,KACnEgL,SAAU/E,GAAarB,EAAM2E,GAAG,GAChCxJ,MAAM,OACNuE,GAAG,MACHqG,QAASJ,EANX,SAQG7K,EAAE,kBAEL,cAAC,IAAD,CAAQE,QAAQ,YAAYG,MAAM,OAAO4K,QAASF,EAAlD,SACG/K,EAAE,gB,sBC8CIuL,GAtGqC,SAAC,GAAuD,IAAD,EAApDC,EAAoD,EAApDA,UAAW/H,EAAyC,EAAzCA,WAAYnJ,EAA6B,EAA7BA,KAAMT,EAAuB,EAAvBA,MAAOkR,EAAgB,EAAhBA,UACzF,EAAwB1E,mBAA0B6B,EAAgBuD,MAAlE,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsCtF,oBAAS,GAA/C,mBAAOuF,EAAP,KAAoBC,EAApB,KACA,EAAkCxF,oBAAS,GAA3C,mBAAOuE,EAAP,KAAkBkB,EAAlB,KACQnS,EAAYyM,cAAZzM,QACAqG,EAAMC,cAAND,EACA+L,EAAeC,cAAfD,WACAE,EAAYC,cAAZD,QACAzH,EAAU2H,cAAV3H,MACR,EASI0B,aAAkBrM,EAAO+R,GAR3BrF,EADF,EACEA,UACArB,EAFF,EAEEA,MACAC,EAHF,EAGEA,YACAC,EAJF,EAIEA,iBACAC,EALF,EAKEA,gBACAC,EANF,EAMEA,aACAC,EAPF,EAOEA,iBACAU,EARF,EAQEA,iBAGImG,EAAcV,IAASxD,EAAgBuD,KACvCY,EAAaD,EAAc,KAAO,kBAAMT,EAAQzD,EAAgBuD,OAGhEtB,GAAK,mBACRjC,EAAgBuD,KAAOzL,EAAE,iBADjB,cAERkI,EAAgBoE,QAAUtM,EAAE,iBAFpB,GAKLuM,EAAgB,WACpBV,GAAe,GACfd,KAGIyB,GAAiB,uCAAG,gCAAA9T,EAAA,sEAEtBoT,GAAa,GACPW,EAAUxT,KAAKC,UAAL,2BACXnB,eADW,IAEd2U,KAAMC,IAAgBC,KACtBC,QAAS,CACPtW,SAAUkN,EACVhJ,OAAQH,EAAKsD,MACb/C,SAAU,CACRC,YAAaoK,EAAM9H,WACnB6I,wBAXgB,SAgBJ6G,YAAYb,EAAStS,EAAS8S,GAhB1B,cAgBhBM,EAhBgB,OAiBhBC,EAAe,CAAEpV,QAAS+B,EAASqT,IAAKP,EAASM,OAjBjC,SAoBhBvU,YAAgBwU,GApBA,cAqBtBlB,GAAa,GArBS,UAuBhBN,IAvBgB,QAyBtBe,IAzBsB,kDA2BtBT,GAAa,GACbC,EAAW/L,EAAE,SAAH,kCAAa,KAAOvH,SAC9BwU,QAAQ3T,MAAR,MA7BsB,0DAAH,qDAiCvB,OACE,cAAC,KAAD,CACE6Q,MAAOA,EAAMuB,GACbwB,OAAQb,EACRtB,UAAWA,EACXoC,iBAAkBf,EAClBgB,iBAAkB5I,EAAMC,OAAO4I,UAAUC,WAL3C,SAOE,eAAC,IAAD,CAAK1I,GAAG,OAAOvE,MAAM,QAArB,UACGqL,IAASxD,EAAgBuD,MACxB,cAAC,GAAD,CACEnR,KAAMA,EACNiM,UAAWA,EACXqE,UAAWA,EACX1F,MAAOA,EACP2F,UAAW2B,GACX1B,cA7DgB,kBAAMa,EAAQzD,EAAgBoE,UA8D9CvB,UAAWwB,IAGdb,IAASxD,EAAgBoE,SACxB,cAACrH,GAAA,EAAD,CACEC,MAAOA,EACPC,YAAaA,EACbC,iBAAkBA,EAClBC,gBAAiBA,EACjBC,aAAcA,EACdC,iBAAkBA,U,gBCxFxBgI,GAAShJ,IAAOyG,MAAV,kLAEU,gBAAGxG,EAAH,EAAGA,MAAOgJ,EAAV,EAAUA,UAAV,OAA0BhJ,EAAMC,OAAO+I,EAAY,UAAY,iBAEzE,qBAAGC,WAA+B,cAAgB,aAMxDC,GAAanJ,IAAOnI,IAAV,qJAoEDuR,GA3DmB,SAAC,GAA4B,IAA1BpX,EAAyB,EAAzBA,SAAawJ,EAAY,kBAC5D,EAAwBsG,mBAAgB,MAAxC,mBAAO/L,EAAP,KAAasT,EAAb,KACQ5N,EAAMC,cAAND,EACA6N,EAAiB7B,cAAjB6B,aACFC,EAAWC,cACTpU,EAAYyM,cAAZzM,QAEFqU,EAAa,uCAAG,sBAAAtV,EAAA,sDACpBmV,EAAa7N,EAAE,eACf8N,EAASG,YAAW,CAAExK,WAAYlN,EAASqS,GAAI/O,MAAOqU,OAAO3X,EAASyS,aAFlD,2CAAH,qDAKnB,EAA+BmF,aAC7B,cAAC,GAAD,CAAe3C,UAAWwC,EAAevK,WAAYlN,EAASqS,GAAItO,KAAMA,EAAMT,MAAOqU,OAAO3X,EAASyS,aADhGoF,EAAP,oBAIA,OACE,eAAC,IAAD,2BAAUrO,GAAV,cACE,cAAC,IAAD,UACE,cAAC,IAAD,CAASyF,GAAG,KAAKyB,MAAM,KAAvB,SACGjH,EAAE,sBAGP,eAAC,IAAD,WACGzJ,EAASiE,QAAQwE,KAAI,SAACvE,EAAQgF,GAC7B,IAAM+N,EAAY/N,EAAQ,KAAR,OAAcnF,QAAd,IAAcA,OAAd,EAAcA,EAAMsD,OAStC,OACE,eAAC2P,GAAD,CAAqBC,UAAWA,EAAWC,YAAa9T,EAAxD,UACE,qBAAKuR,MAAO,CAAEmD,WAAY,GAA1B,SACE,cAAC,KAAD,CAAOpH,MAAM,KAAKrJ,MAAOnD,EAAQ6T,QAASd,EAAWe,SAVtC,WACnBX,EAAQ,CACN5C,MAAOvQ,EACPmD,MAAO6B,EAAQ,KAOgE6L,UAAW3R,MAE1F,cAAC+T,GAAD,UACE,cAAC,KAAD,CAAMlI,GAAG,OAAO2E,MAAO1P,EAAvB,SACGA,QANMA,MAYhBd,EACC,cAAC,IAAD,CAAQsR,QAASmD,EAAsB9C,SAAmB,OAAThR,EAAjD,SACG0F,EAAE,eAGL,cAACwO,EAAA,EAAD,Y,sBCvFJC,GAAMlK,YAAOmK,IAAPnK,CAAH,oFACoB,qBAAGC,MAAkBC,OAAOC,cAInDiK,GAAiBpK,YAAOqK,KAAPrK,CAAH,wCAkBLsK,GAdM,WACnB,OACE,cAAC,IAAD,UACGhR,IAAM,IAAImB,KAAI,SAACS,GAAD,OACb,eAACgP,GAAD,WACE,cAAC,KAAD,CAAU/D,OAAO,OAAOnK,GAAG,OAAOF,MAAM,UACxC,cAACsO,GAAD,CAAgBjE,OAAO,OAAOnK,GAAG,OAAOF,MAAM,SAC9C,cAACsO,GAAD,CAAgBjE,OAAO,OAAOrK,MAAM,WAH5BZ,S,oBCfLqP,GAAgBvK,YAAO6D,KAAK2G,MAAM,CAAElJ,WAAY,UAAhCtB,CAAH,mDAIbyK,GAAezK,YAAO6D,IAAP7D,CAAH,uEAKZ0K,GAAoB1K,YAAO6D,IAAP7D,CAAH,sEAkBfkK,GAbHlK,YAAO2K,IAAP3K,CAAH,4QACoB,qBAAGC,MAAkBC,OAAOC,cAMrD,qBAAGF,MAAkBO,aAAaoK,MCwBvBC,GAhCyB,SAAC,GAAuB,IAAD,EAApB9U,EAAoB,EAApBA,KAAM+U,EAAc,EAAdA,QACvCrP,EAAMC,cAAND,EACFsP,KAAkB,UAAChV,EAAKO,gBAAN,aAAC,EAAeC,aAClCA,EAAcwU,EAAiB,IAAI1U,KAAUN,EAAKO,SAASC,aAAa8K,SAAS,GAAK,KAE5F,OACE,eAAC,GAAD,WACE,cAACkJ,GAAD,UACE,eAAC,IAAD,CAAMjJ,WAAW,SAAjB,UACE,cAAC,KAAD,CAAc8C,KAAMI,YAAezO,EAAK2P,MAAO,WAA/C,SAA4DhP,YAAsBX,EAAK2P,SACtFoF,GACC,eAAC,KAAD,CAAKnP,QAAQ,UAAUC,SAAO,EAAC0I,GAAG,MAAlC,UACE,cAAC,IAAD,CAAqBtI,GAAG,QAD1B,IACoCP,EAAE,iBAK5C,cAACgP,GAAD,UACE,cAAC,EAAD,CAAc7E,MAAO7P,EAAK/D,SAASiE,QAAQF,EAAKG,OAAS,GAAzD,SACGH,EAAK/D,SAASiE,QAAQF,EAAKG,OAAS,OAGzC,cAACwU,GAAD,UACE,eAAC,IAAD,CAAMpJ,WAAW,SAASC,eAAe,MAAzC,UACE,cAAC,KAAD,CAAMqE,MAAO7P,EAAKO,SAASC,YAA3B,SAAyCA,IACxCwU,GAAkB,cAAC,KAAD,CAAc3G,KAAI,UAAKpN,IAAL,YAAqBjB,EAAKsO,eCdnE2G,GAAiB,SAACC,GAAwB,IAAD,EAC7C,OAAOC,WAAU,OAACD,QAAD,IAACA,GAAD,UAACA,EAAc3U,gBAAf,aAAC,EAAwBC,cAgF7B4U,GA7EqB,SAAC,GAAe,IAAbvV,EAAY,EAAZA,MACrC,EAA8BkM,oBAAS,GAAvC,mBAAOsJ,EAAP,KAAgBC,EAAhB,KACQ5P,EAAMC,cAAND,EACArG,EAAYyM,cAAZzM,QACFkW,EAAeC,KAAQ3V,EAAO,CAACoV,GAAgB,WAAY,CAAC,OAAQ,SACpEQ,EAAeJ,EAAUE,EAAeA,EAAa/G,MAAM,EAf5C,IAiBfjK,EADa+E,gBACe4F,IAAyBC,KAM3D,OACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAM5D,WAAW,SAASC,eAAe,gBAAzC,UACE,cAAC,IAAD,CAASN,GAAG,KAAKyB,MAAM,KAAvB,SACGjH,EAAE,kBAAmB,CAAEyK,MAAOtQ,EAAMkB,OAAOgP,sBAE5CxL,GAAc,cAAC,IAAD,CAAewM,MAAI,EAAChL,MAAM,eAG5CxB,GAAc,cAAC,GAAD,IAEfA,GAAckR,EAAa1U,OAAS,GACnC,qCACE,eAAC,GAAD,WACE,cAACyT,GAAD,UACE,cAAC,KAAD,CAAMrJ,SAAS,OAAOnF,MAAM,aAAaoF,cAAc,YAAYC,MAAI,EAAvE,SACG3F,EAAE,aAGP,cAACgP,GAAD,UACE,cAAC,KAAD,CAAMvJ,SAAS,OAAOnF,MAAM,aAAaoF,cAAc,YAAYC,MAAI,EAAvE,SACG3F,EAAE,gBAGP,cAACiP,GAAD,UACE,cAAC,KAAD,CAAMxJ,SAAS,OAAOnF,MAAM,aAAaoF,cAAc,YAAYC,MAAI,EAAvE,SACG3F,EAAE,sBAIR+P,EAAa/Q,KAAI,SAAC1E,GACjB,IAAM+U,EAAU1V,GAAWW,EAAK2P,MAAMxT,gBAAkBkD,EAAQlD,cAChE,OAAO,cAAC,GAAD,CAAuB6D,KAAMA,EAAM+U,QAASA,GAA9B/U,EAAKsO,OAE5B,cAAC,IAAD,CAAM/C,WAAW,SAASC,eAAe,SAASkK,GAAG,MAAMC,GAAG,OAA9D,SACE,cAAC,IAAD,CACE5P,MAAM,OACN4K,QA1CQ,WAClB2E,GAAYD,IA0CFzP,QAAQ,OACRkL,QACEuE,EACE,cAAC,IAAD,CAAerP,MAAM,UAAUD,MAAM,SAErC,cAAC,IAAD,CAAiBC,MAAM,UAAUD,MAAM,SAG3CiL,UAAWzM,EAXb,SAaamB,EAAV2P,EAAY,OAAY,kBAMhC9Q,GAAsC,IAAxBkR,EAAa1U,QAC1B,cAAC,IAAD,CAAMwK,WAAW,SAASC,eAAe,SAASkK,GAAG,OAArD,SACE,cAAC,IAAD,CAASxK,GAAG,KAAZ,SAAkBxF,EAAE,0BCPfkQ,UArEE,WACf,IAAQtH,EAAuBuH,cAAvBvH,GACFrS,EAAWiN,YAAeoF,GACxB5I,EAAMC,cAAND,EACArG,EAAYyM,cAAZzM,QACFmU,EAAWC,cACX5T,EAAQuJ,YAAYkF,GACpB/E,EAAoBD,cACpBG,EAAwBD,cACxBsM,EAAkBzW,GAAWQ,EAAM6P,MAAK,SAAC1P,GAAD,OAAUA,EAAK2P,MAAMxT,gBAAkBkD,EAAQlD,iBAC7F,SAAmDF,QAAnD,IAAmDA,IAAY,GAA/D,IAAQqS,GAAInF,OAAZ,MAAyB,KAAzB,MAA+BuF,gBAA/B,MAA0C,KAA1C,EACMqH,EACJxM,IAAsB2F,IAAyBgB,SAAWzG,IAA0ByF,IAAyBgB,QAkB/G,OAhBA/D,qBAAU,WACRqH,EAASwC,YAAc1H,MACtB,CAACA,EAAIkF,IAGRrH,qBAAU,WAMJhD,GAAcuF,GALJ,uCAAG,sBAAAtQ,EAAA,sEACToV,EAASG,YAAW,CAAExK,aAAY5J,MAAOqU,OAAOlF,MADvC,OAEf8E,EAASyC,YAAY,CAAE9M,aAAYuF,cAFpB,2CAAH,oDAMZwH,KAED,CAAC/M,EAAYuF,EAAU8E,IAErBvX,EAKH,eAACka,EAAA,EAAD,CAAWT,GAAG,OAAd,UACE,cAAC,IAAD,CAAKpL,GAAG,OAAR,SACE,cAAC,IAAD,CAAQY,GAAIkL,IAAMC,GAAG,UAAUzQ,QAAQ,OAAOE,UAAW,cAAC,IAAD,CAAeE,MAAM,UAAUD,MAAM,SAAW4P,GAAG,IAA5G,SACGjQ,EAAE,6BAGP,eAAC8E,EAAA,EAAD,WACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAKF,GAAG,OAAR,UACE,eAAC,IAAD,CAAMiB,WAAW,SAASjB,GAAG,MAA7B,UACE,cAAC,IAAD,CAAkBX,cAAe1N,EAASa,QAC1C,cAAC,IAAD,CAAiBd,eAAgBA,YAAeC,GAAWsS,GAAG,WAEhE,cAAC,IAAD,CAASrD,GAAG,KAAKyB,MAAM,KAAKrC,GAAG,OAA/B,SACGrO,EAAS4T,QAEZ,cAAC,IAAD,UACE,cAACrC,EAAA,EAAD,UAAgBvR,EAASyC,aAG3BqX,IAAkBD,GAAmB7Z,EAASa,QAAU8M,IAAcC,QACtE,cAAC,GAAD,CAAM5N,SAAUA,EAAUqO,GAAG,SAE/B,cAAC,GAAD,CAAOzK,MAAOA,OAEhB,eAAC,IAAD,WACE,cAAC,EAAD,CAAS5D,SAAUA,IACnB,cAAC,EAAD,CAASiE,QAASjE,EAASiE,QAASL,MAAOA,aA/B1C,cAACyW,EAAA,EAAD","file":"static/js/7.9d0ae1c4.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport { SNAPSHOT_HUB_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { Proposal, ProposalState, ProposalType, Vote } from 'state/types'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport { ADMIN_ADDRESS, PANCAKE_SPACE, SNAPSHOT_VERSION } from './config'\r\n\r\nexport const isCoreProposal = (proposal: Proposal) => {\r\n  return proposal.author.toLowerCase() === ADMIN_ADDRESS.toLowerCase()\r\n}\r\n\r\nexport const filterProposalsByType = (proposals: Proposal[], proposalType: ProposalType) => {\r\n  switch (proposalType) {\r\n    case ProposalType.COMMUNITY:\r\n      return proposals.filter((proposal) => !isCoreProposal(proposal))\r\n    case ProposalType.CORE:\r\n      return proposals.filter((proposal) => isCoreProposal(proposal))\r\n    case ProposalType.ALL:\r\n    default:\r\n      return proposals\r\n  }\r\n}\r\n\r\nexport const filterProposalsByState = (proposals: Proposal[], state: ProposalState) => {\r\n  return proposals.filter((proposal) => proposal.state === state)\r\n}\r\n\r\nexport interface Message {\r\n  address: string\r\n  msg: string\r\n  sig: string\r\n}\r\n\r\n/**\r\n * Generates metadata required by snapshot to validate payload\r\n */\r\nexport const generateMetaData = () => {\r\n  return {\r\n    plugins: {},\r\n    network: 56,\r\n    strategies: [{ name: 'cake', params: { symbol: 'CAKE', address: getCakeAddress(), decimals: 18 } }],\r\n  }\r\n}\r\n\r\n/**\r\n * Returns data that is required on all snapshot payloads\r\n */\r\nexport const generatePayloadData = () => {\r\n  return {\r\n    version: SNAPSHOT_VERSION,\r\n    timestamp: (Date.now() / 1e3).toFixed(),\r\n    space: PANCAKE_SPACE,\r\n  }\r\n}\r\n\r\n/**\r\n * General function to send commands to the snapshot api\r\n */\r\nexport const sendSnaphotData = async (message: Message) => {\r\n  const response = await fetch(SNAPSHOT_HUB_API, {\r\n    method: 'post',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(message),\r\n  })\r\n\r\n  if (!response.ok) {\r\n    const error = await response.json()\r\n    throw new Error(error?.error_description)\r\n  }\r\n\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const getVotingPower = async (account: string, poolAddresses: string[], block?: number) => {\r\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\r\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/power`, {\r\n    method: 'post',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      address: account,\r\n      block: blockNumber,\r\n      poolAddresses,\r\n    }),\r\n  })\r\n  const data = await response.json()\r\n  return data.data\r\n}\r\n\r\nexport const calculateVoteResults = (votes: Vote[]): { [key: string]: Vote[] } => {\r\n  return votes.reduce((accum, vote) => {\r\n    const choiceText = vote.proposal.choices[vote.choice - 1]\r\n\r\n    return {\r\n      ...accum,\r\n      [choiceText]: accum[choiceText] ? [...accum[choiceText], vote] : [vote],\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport const getTotalFromVotes = (votes: Vote[]) => {\r\n  return votes.reduce((accum, vote) => {\r\n    const power = new BigNumber(vote.metadata?.votingPower)\r\n    return accum.plus(power)\r\n  }, BIG_ZERO)\r\n}\r\n","/**\r\n * Truncates a wallet's address\r\n */\r\nconst truncateWalletAddress = (address: string, startLength = 4, endLength = 4) => {\r\n  return `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`\r\n}\r\n\r\nexport default truncateWalletAddress\r\n","export const PROPOSALS_TO_SHOW = 10\r\nexport const ADMIN_ADDRESS = '0x6eaf1b33b8672c5dc40aB8f4bA3A0111723126c7'\r\nexport const IPFS_GATEWAY = 'https://gateway.ipfs.io/ipfs'\r\nexport const SNAPSHOT_VERSION = '0.1.3'\r\nexport const PANCAKE_SPACE = 'cake.eth'\r\nexport const VOTE_THRESHOLD = 10\r\n","import { ethers, Contract, Overrides } from 'ethers'\r\n\r\n/**\r\n * Estimate the gas needed to call a function, and add a 10% margin\r\n * @param contract Used to perform the call\r\n * @param methodName The name of the methode called\r\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\r\n * @param args An array of arguments to pass to the method\r\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\r\n */\r\nexport const estimateGas = async (\r\n  contract: Contract,\r\n  methodName: string,\r\n  methodArgs: any[],\r\n  gasMarginPer10000: number,\r\n) => {\r\n  if (!contract[methodName]) {\r\n    throw new Error(`Method ${methodName} doesn't exist on ${contract.address}`)\r\n  }\r\n  const rawGasEstimation = await contract.estimateGas[methodName](...methodArgs)\r\n  // By convention, ethers.BigNumber values are multiplied by 1000 to avoid dealing with real numbers\r\n  const gasEstimation = rawGasEstimation\r\n    .mul(ethers.BigNumber.from(10000).add(ethers.BigNumber.from(gasMarginPer10000)))\r\n    .div(ethers.BigNumber.from(10000))\r\n  return gasEstimation\r\n}\r\n\r\n/**\r\n * Perform a contract call with a gas value returned from estimateGas\r\n * @param contract Used to perform the call\r\n * @param methodName The name of the method called\r\n * @param methodArgs An array of arguments to pass to the method\r\n * @param overrides An overrides object to pass to the method\r\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\r\n */\r\nexport const callWithEstimateGas = async (\r\n  contract: Contract,\r\n  methodName: string,\r\n  methodArgs: any[] = [],\r\n  overrides: Overrides = {},\r\n  gasMarginPer10000 = 1000,\r\n): Promise<ethers.providers.TransactionResponse> => {\r\n  const gasEstimation = estimateGas(contract, methodName, methodArgs, gasMarginPer10000)\r\n  const tx = await contract[methodName](...methodArgs, {\r\n    gasLimit: gasEstimation,\r\n    ...overrides,\r\n  })\r\n  return tx\r\n}\r\n","import { ChainId } from '@pancakeswap/sdk'\r\nimport store from 'state'\r\nimport { GAS_PRICE_GWEI } from 'state/user/hooks/helpers'\r\n\r\n/**\r\n * Function to return gasPrice outwith a react component\r\n */\r\nconst getGasPrice = (): string => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  const state = store.getState()\r\n  const userGas = state.user.gasPrice || GAS_PRICE_GWEI.default;\r\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\r\n}\r\n\r\nexport default getGasPrice\r\n","import BigNumber from 'bignumber.js'\r\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\r\nimport getGasPrice from 'utils/getGasPrice'\r\n\r\nconst options = {\r\n  gasLimit: DEFAULT_GAS_LIMIT,\r\n}\r\n\r\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\r\n  const gasPrice = getGasPrice()\r\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\r\n  if (pid === 0) {\r\n    const tx = await masterChefContract.enterStaking(value, { ...options, gasPrice })\r\n    const receipt = await tx.wait()\r\n    return receipt.status\r\n  }\r\n\r\n  const tx = await masterChefContract.deposit(pid, value, { ...options, gasPrice })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\r\n  const gasPrice = getGasPrice()\r\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\r\n  if (pid === 0) {\r\n    const tx = await masterChefContract.leaveStaking(value, { ...options, gasPrice })\r\n    const receipt = await tx.wait()\r\n    return receipt.status\r\n  }\r\n\r\n  const tx = await masterChefContract.withdraw(pid, value, { ...options, gasPrice })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nexport const harvestFarm = async (masterChefContract, pid) => {\r\n  const gasPrice = getGasPrice()\r\n  if (pid === 0) {\r\n    const tx = await masterChefContract.leaveStaking('0', { ...options, gasPrice })\r\n    const receipt = await tx.wait()\r\n    return receipt.status\r\n  }\r\n\r\n  const tx = await masterChefContract.deposit(pid, '0', { ...options, gasPrice })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n","/* eslint-disable import/prefer-default-export */\r\nimport BigNumber from 'bignumber.js'\r\nimport pools from 'config/constants/pools'\r\nimport sousChefV2 from 'config/abi/sousChefV2.json'\r\nimport multicall from '../multicall'\r\nimport { simpleRpcProvider } from '../providers'\r\nimport { getAddress } from '../addressHelpers'\r\n\r\n/**\r\n * Returns the total number of pools that were active at a given block\r\n */\r\nexport const getActivePools = async (block?: number) => {\r\n  const eligiblePools = pools\r\n    .filter((pool) => pool.sousId !== 0)\r\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\r\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\r\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\r\n    address: getAddress(contractAddress),\r\n    name: 'startBlock',\r\n  }))\r\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\r\n    address: getAddress(contractAddress),\r\n    name: 'bonusEndBlock',\r\n  }))\r\n  const startBlocks = await multicall(sousChefV2, startBlockCalls)\r\n  const endBlocks = await multicall(sousChefV2, endBlockCalls)\r\n\r\n  return eligiblePools.reduce((accum, poolCheck, index) => {\r\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\r\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\r\n\r\n    if (!startBlock || !endBlock) {\r\n      return accum\r\n    }\r\n\r\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\r\n      return accum\r\n    }\r\n\r\n    return [...accum, poolCheck]\r\n  }, [])\r\n}\r\n","import React from 'react'\r\nimport {\r\n  Tag,\r\n  VerifiedIcon,\r\n  CommunityIcon,\r\n  RefreshIcon,\r\n  AutoRenewIcon,\r\n  TagProps,\r\n  TimerIcon,\r\n  BlockIcon,\r\n  VoteIcon,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst CoreTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\r\n      {t('Core')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst CommunityTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\r\n      {t('Community')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst DualTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"textSubtle\" outline {...props}>\r\n      {t('Dual')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\r\n      {t('Manual')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\r\n      {t('Auto')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst VoteNowTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\r\n      {t('Vote Now')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst SoonTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\r\n      {t('Soon')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst ClosedTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\r\n      {t('Closed')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\r\n","var baseOrderBy = require('./_baseOrderBy'),\n    isArray = require('./isArray');\n\n/**\n * This method is like `_.sortBy` except that it allows specifying the sort\n * orders of the iteratees to sort by. If `orders` is unspecified, all values\n * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n * descending or \"asc\" for ascending sort order of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @param {string[]} [orders] The sort orders of `iteratees`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 34 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 36 }\n * ];\n *\n * // Sort by `user` in ascending order and by `age` in descending order.\n * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n */\nfunction orderBy(collection, iteratees, orders, guard) {\n  if (collection == null) {\n    return [];\n  }\n  if (!isArray(iteratees)) {\n    iteratees = iteratees == null ? [] : [iteratees];\n  }\n  orders = guard ? undefined : orders;\n  if (!isArray(orders)) {\n    orders = orders == null ? [] : [orders];\n  }\n  return baseOrderBy(collection, iteratees, orders);\n}\n\nmodule.exports = orderBy;\n","var arrayMap = require('./_arrayMap'),\n    baseGet = require('./_baseGet'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    baseSortBy = require('./_baseSortBy'),\n    baseUnary = require('./_baseUnary'),\n    compareMultiple = require('./_compareMultiple'),\n    identity = require('./identity'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n","/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nmodule.exports = baseSortBy;\n","var compareAscending = require('./_compareAscending');\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nmodule.exports = compareMultiple;\n","var isSymbol = require('./isSymbol');\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nmodule.exports = compareAscending;\n","import { useSelector } from 'react-redux'\r\nimport { State } from '../types'\r\n\r\n// Voting\r\nexport const useGetProposals = () => {\r\n  const proposals = useSelector((state: State) => state.voting.proposals)\r\n  return Object.values(proposals)\r\n}\r\n\r\nexport const useGetProposal = (proposalId: string) => {\r\n  const proposal = useSelector((state: State) => state.voting.proposals[proposalId])\r\n  return proposal\r\n}\r\n\r\nexport const useGetVotes = (proposalId: string) => {\r\n  const votes = useSelector((state: State) => state.voting.votes[proposalId])\r\n  return votes ? votes.filter((vote) => vote._inValid !== true) : []\r\n}\r\n\r\nexport const useGetVotingStateLoadingStatus = () => {\r\n  const votingStatus = useSelector((state: State) => state.voting.voteLoadingStatus)\r\n  return votingStatus\r\n}\r\n\r\nexport const useGetProposalLoadingStatus = () => {\r\n  const votingStatus = useSelector((state: State) => state.voting.proposalLoadingStatus)\r\n  return votingStatus\r\n}\r\n","import React from 'react'\r\nimport { TagProps } from '@pancakeswap/uikit'\r\nimport { ClosedTag, CommunityTag, CoreTag, SoonTag, VoteNowTag } from 'components/Tags'\r\nimport { ProposalState } from 'state/types'\r\n\r\ninterface ProposalStateTagProps extends TagProps {\r\n  proposalState: ProposalState\r\n}\r\n\r\nexport const ProposalStateTag: React.FC<ProposalStateTagProps> = ({ proposalState, ...props }) => {\r\n  if (proposalState === ProposalState.ACTIVE) {\r\n    return <VoteNowTag {...props} />\r\n  }\r\n\r\n  if (proposalState === ProposalState.PENDING) {\r\n    return <SoonTag {...props} />\r\n  }\r\n\r\n  return <ClosedTag {...props} />\r\n}\r\n\r\ninterface ProposalTypeTagProps extends TagProps {\r\n  isCoreProposal: boolean\r\n}\r\n\r\nexport const ProposalTypeTag: React.FC<ProposalTypeTagProps> = ({ isCoreProposal, ...props }) => {\r\n  if (isCoreProposal) {\r\n    return <CoreTag {...props} />\r\n  }\r\n\r\n  return <CommunityTag {...props} />\r\n}\r\n","import React from 'react'\r\nimport { Box, BoxProps } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\n\r\nexport const VotingBox = styled.div`\r\n  align-items: center;\r\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  border-radius: 12px;\r\n  display: flex;\r\n  height: 64px;\r\n  justify-content: space-between;\r\n  margin-bottom: 24px;\r\n  padding: 0 16px;\r\n`\r\n\r\nexport const ModalInner: React.FC<BoxProps> = (props) => {\r\n  return <Box mb=\"24px\" maxWidth=\"320px\" {...props} />\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Layout = styled.div`\r\n  align-items: start;\r\n  display: grid;\r\n  grid-gap: 32px;\r\n  grid-template-columns: minmax(0, 1fr);\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    grid-template-columns: 1fr 332px;\r\n  }\r\n`\r\n\r\nexport default Layout\r\n","import React from 'react'\r\nimport { Text, Flex } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { VotingBox, ModalInner } from './styles'\r\n\r\ninterface DetailsViewProps {\r\n  total: BigNumber\r\n  cakeBalance: BigNumber\r\n  cakeVaultBalance: BigNumber\r\n  cakePoolBalance: BigNumber\r\n  poolsBalance: BigNumber\r\n  cakeBnbLpBalance: BigNumber\r\n}\r\n\r\nconst DetailsView: React.FC<DetailsViewProps> = ({\r\n  total,\r\n  cakeBalance,\r\n  cakeVaultBalance,\r\n  cakePoolBalance,\r\n  poolsBalance,\r\n  cakeBnbLpBalance,\r\n}) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <ModalInner mb=\"0\">\r\n      <Text as=\"p\" mb=\"24px\" fontSize=\"14px\" color=\"textSubtle\">\r\n        {t(\r\n          'Your voting power is determined by the amount of CAKE you held at the block detailed below. CAKE held in other places does not contribute to your voting power.',\r\n        )}\r\n      </Text>\r\n      <Text color=\"secondary\" textTransform=\"uppercase\" mb=\"4px\" bold fontSize=\"14px\">\r\n        {t('Overview')}\r\n      </Text>\r\n      <VotingBox>\r\n        <Text color=\"secondary\">{t('Your Voting Power')}</Text>\r\n        <Text bold fontSize=\"20px\">\r\n          {total.toFormat(3)}\r\n        </Text>\r\n      </VotingBox>\r\n      <Text color=\"secondary\" textTransform=\"uppercase\" mb=\"4px\" bold fontSize=\"14px\">\r\n        {t('Your Cake Held Now')}\r\n      </Text>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('Wallet')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{cakeBalance.toFormat(3)}</Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('Manual CAKE Pool')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{cakePoolBalance.toFormat(3)}</Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('Auto CAKE Pool')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{cakeVaultBalance.toFormat(3)}</Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('Other Syrup Pools')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{poolsBalance.toFormat(3)}</Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('CAKE BNB LP')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{cakeBnbLpBalance.toFormat(3)}</Text>\r\n      </Flex>\r\n    </ModalInner>\r\n  )\r\n}\r\n\r\nexport default DetailsView\r\n","import { useState, useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { getActivePools } from 'utils/calls'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getVotingPower } from '../helpers'\r\n\r\ninterface State {\r\n  verificationHash: string\r\n  cakeBalance: BigNumber\r\n  cakeVaultBalance: BigNumber\r\n  cakePoolBalance: BigNumber\r\n  poolsBalance: BigNumber\r\n  cakeBnbLpBalance: BigNumber\r\n  total: BigNumber\r\n}\r\n\r\nconst initialState: State = {\r\n  verificationHash: null,\r\n  cakeBalance: BIG_ZERO,\r\n  cakeVaultBalance: BIG_ZERO,\r\n  cakePoolBalance: BIG_ZERO,\r\n  poolsBalance: BIG_ZERO,\r\n  cakeBnbLpBalance: BIG_ZERO,\r\n  total: BIG_ZERO,\r\n}\r\n\r\nconst useGetVotingPower = (block?: number, isActive = true): State & { isLoading: boolean } => {\r\n  const { account } = useWeb3React()\r\n  const [votingPower, setVotingPower] = useState(initialState)\r\n  const [isLoading, setIsLoading] = useState(!!account)\r\n\r\n  useEffect(() => {\r\n    const fetchVotingPower = async () => {\r\n      setIsLoading(true)\r\n\r\n      try {\r\n        const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\r\n        const eligiblePools = await getActivePools(blockNumber)\r\n        const poolAddresses = eligiblePools.map(({ contractAddress }) => getAddress(contractAddress))\r\n        const {\r\n          cakeBalance,\r\n          cakeBnbLpBalance,\r\n          cakePoolBalance,\r\n          total,\r\n          poolsBalance,\r\n          cakeVaultBalance,\r\n          verificationHash,\r\n        } = await getVotingPower(account, poolAddresses, blockNumber)\r\n\r\n        if (isActive) {\r\n          setVotingPower((prevVotingPower) => ({\r\n            ...prevVotingPower,\r\n            verificationHash,\r\n            cakeBalance: new BigNumber(cakeBalance),\r\n            cakeBnbLpBalance: new BigNumber(cakeBnbLpBalance),\r\n            cakePoolBalance: new BigNumber(cakePoolBalance),\r\n            poolsBalance: new BigNumber(poolsBalance),\r\n            cakeVaultBalance: new BigNumber(cakeVaultBalance),\r\n            total: new BigNumber(total),\r\n          }))\r\n        }\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n\r\n    if (account && isActive) {\r\n      fetchVotingPower()\r\n    }\r\n  }, [account, block, setVotingPower, isActive, setIsLoading])\r\n\r\n  return { ...votingPower, isLoading }\r\n}\r\n\r\nexport default useGetVotingPower\r\n","import React from 'react'\r\nimport { Heading, Text } from '@pancakeswap/uikit'\r\nimport { NormalComponents, SpecialComponents } from 'react-markdown/src/ast-to-react'\r\nimport styled from 'styled-components'\r\n\r\nconst Table = styled.table`\r\n  margin-bottom: 32px;\r\n  margin-top: 32px;\r\n  width: 100%;\r\n\r\n  td,\r\n  th {\r\n    color: ${({ theme }) => theme.colors.text};\r\n    padding: 8px;\r\n  }\r\n`\r\n\r\nconst ThemedComponent = styled.div`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  margin-bottom: 16px;\r\n  margin-top: 16px;\r\n\r\n  li {\r\n    margin-bottom: 8px;\r\n  }\r\n`\r\n\r\nconst Pre = styled.pre`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  margin-bottom: 16px;\r\n  margin-top: 16px;\r\n  max-width: 100%;\r\n  overflow-x: auto;\r\n`\r\n\r\nconst Title = (props) => {\r\n  return <Heading as=\"h4\" scale=\"lg\" my=\"16px\" {...props} />\r\n}\r\n\r\nconst markdownComponents: Partial<NormalComponents & SpecialComponents> = {\r\n  h1: Title,\r\n  h2: Title,\r\n  h3: Title,\r\n  h4: Title,\r\n  h5: Title,\r\n  h6: Title,\r\n  p: (props) => {\r\n    return <Text as=\"p\" my=\"16px\" {...props} />\r\n  },\r\n  table: Table,\r\n  ol: (props) => {\r\n    return <ThemedComponent as=\"ol\" {...props} />\r\n  },\r\n  ul: (props) => {\r\n    return <ThemedComponent as=\"ul\" {...props} />\r\n  },\r\n  pre: Pre,\r\n}\r\n\r\nexport default markdownComponents\r\n","import React from 'react'\r\nimport ReactMarkdownLib, { ReactMarkdownOptions } from 'react-markdown'\r\nimport gfm from 'remark-gfm'\r\nimport markdownComponents from './styles'\r\n\r\nconst ReactMarkdown: React.FC<ReactMarkdownOptions> = (props) => {\r\n  return <ReactMarkdownLib remarkPlugins={[gfm]} components={markdownComponents} {...props} />\r\n}\r\n\r\nexport default ReactMarkdown\r\n","import { InjectedModalProps } from '@pancakeswap/uikit'\r\n\r\nexport enum ConfirmVoteView {\r\n  MAIN = 'main',\r\n  DETAILS = 'details',\r\n}\r\n\r\nexport interface CastVoteModalProps extends InjectedModalProps {\r\n  onSuccess: () => Promise<void>\r\n  proposalId: string\r\n  vote: {\r\n    label: string\r\n    value: number\r\n  }\r\n  block?: number\r\n}\r\n","import React from 'react'\r\nimport { Box, Card, CardBody, CardHeader, Flex, Heading, LinkExternal, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { format } from 'date-fns'\r\nimport { Proposal } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBscScanLink } from 'utils'\r\nimport truncateWalletAddress from 'utils/truncateWalletAddress'\r\nimport { IPFS_GATEWAY } from '../config'\r\nimport { ProposalStateTag } from '../components/Proposals/tags'\r\n\r\ninterface DetailsProps {\r\n  proposal: Proposal\r\n}\r\n\r\nconst DetailBox = styled(Box)`\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  border-radius: 16px;\r\n`\r\n\r\nconst Details: React.FC<DetailsProps> = ({ proposal }) => {\r\n  const { t } = useTranslation()\r\n  const startDate = new Date(proposal.start * 1000)\r\n  const endDate = new Date(proposal.end * 1000)\r\n\r\n  return (\r\n    <Card mb=\"16px\">\r\n      <CardHeader>\r\n        <Heading as=\"h3\" scale=\"md\">\r\n          {t('Details')}\r\n        </Heading>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Flex alignItems=\"center\" mb=\"8px\">\r\n          <Text color=\"textSubtle\">{t('Identifier')}</Text>\r\n          <LinkExternal href={`${IPFS_GATEWAY}/${proposal.id}`} ml=\"8px\">\r\n            {proposal.id.slice(0, 8)}\r\n          </LinkExternal>\r\n        </Flex>\r\n        <Flex alignItems=\"center\" mb=\"8px\">\r\n          <Text color=\"textSubtle\">{t('Creator')}</Text>\r\n          <LinkExternal href={getBscScanLink(proposal.author, 'address')} ml=\"8px\">\r\n            {truncateWalletAddress(proposal.author)}\r\n          </LinkExternal>\r\n        </Flex>\r\n        <Flex alignItems=\"center\" mb=\"16px\">\r\n          <Text color=\"textSubtle\">{t('Snapshot')}</Text>\r\n          <LinkExternal href={getBscScanLink(proposal.snapshot, 'block')} ml=\"8px\">\r\n            {proposal.snapshot}\r\n          </LinkExternal>\r\n        </Flex>\r\n        <DetailBox p=\"16px\">\r\n          <ProposalStateTag proposalState={proposal.state} mb=\"8px\" />\r\n          <Flex alignItems=\"center\">\r\n            <Text color=\"textSubtle\" fontSize=\"14px\">\r\n              {t('Start Date')}\r\n            </Text>\r\n            <Text ml=\"8px\">{format(startDate, 'yyyy-MM-dd HH:mm')}</Text>\r\n          </Flex>\r\n          <Flex alignItems=\"center\">\r\n            <Text color=\"textSubtle\" fontSize=\"14px\">\r\n              {t('End Date')}\r\n            </Text>\r\n            <Text ml=\"8px\">{format(endDate, 'yyyy-MM-dd HH:mm')}</Text>\r\n          </Flex>\r\n        </DetailBox>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Details\r\n","import styled from 'styled-components'\r\nimport { Text } from '@pancakeswap/uikit'\r\n\r\nconst TextEllipsis = styled(Text)`\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`\r\n\r\nexport default TextEllipsis\r\n","import React from 'react'\r\nimport {\r\n  Box,\r\n  Text,\r\n  Flex,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Heading,\r\n  Progress,\r\n  Skeleton,\r\n  Tag,\r\n  CheckmarkCircleIcon,\r\n} from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport times from 'lodash/times'\r\nimport { Vote, VotingStateLoadingStatus } from 'state/types'\r\nimport { useGetVotingStateLoadingStatus } from 'state/voting/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { calculateVoteResults, getTotalFromVotes } from '../helpers'\r\nimport TextEllipsis from '../components/TextEllipsis'\r\n\r\ninterface ResultsProps {\r\n  choices: string[]\r\n  votes: Vote[]\r\n}\r\n\r\nconst Results: React.FC<ResultsProps> = ({ choices, votes }) => {\r\n  const { t } = useTranslation()\r\n  const results = calculateVoteResults(votes)\r\n  const votingStatus = useGetVotingStateLoadingStatus()\r\n  const { account } = useWeb3React()\r\n  const totalVotes = getTotalFromVotes(votes)\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <Heading as=\"h3\" scale=\"md\">\r\n          {t('Current Results')}\r\n        </Heading>\r\n      </CardHeader>\r\n      <CardBody>\r\n        {votingStatus === VotingStateLoadingStatus.IDLE &&\r\n          choices.map((choice, index) => {\r\n            const choiceVotes = results[choice] || []\r\n            const totalChoiceVote = getTotalFromVotes(choiceVotes)\r\n\r\n            const progress = totalVotes.eq(0) ? 0 : totalChoiceVote.div(totalVotes).times(100).toNumber()\r\n            const hasVoted = choiceVotes.some((vote) => {\r\n              return account && vote.voter.toLowerCase() === account.toLowerCase()\r\n            })\r\n\r\n            return (\r\n              <Box key={choice} mt={index > 0 ? '24px' : '0px'}>\r\n                <Flex alignItems=\"center\" mb=\"8px\">\r\n                  <TextEllipsis mb=\"4px\" title={choice}>\r\n                    {choice}\r\n                  </TextEllipsis>\r\n                  {hasVoted && (\r\n                    <Tag variant=\"success\" outline ml=\"8px\">\r\n                      <CheckmarkCircleIcon mr=\"4px\" /> {t('Voted')}\r\n                    </Tag>\r\n                  )}\r\n                </Flex>\r\n                <Box mb=\"4px\">\r\n                  <Progress primaryStep={progress} scale=\"sm\" />\r\n                </Box>\r\n                <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n                  <Text color=\"textSubtle\">{t('%total% Votes', { total: totalChoiceVote.toFormat(3) })}</Text>\r\n                  <Text>\r\n                    {progress.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}%\r\n                  </Text>\r\n                </Flex>\r\n              </Box>\r\n            )\r\n          })}\r\n\r\n        {votingStatus === VotingStateLoadingStatus.LOADING &&\r\n          times(choices.length).map((count, index) => {\r\n            return (\r\n              <Box key={count} mt={index > 0 ? '24px' : '0px'}>\r\n                <Skeleton height=\"36px\" mb=\"4px\" />\r\n              </Box>\r\n            )\r\n          })}\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Results\r\n","import React from 'react'\r\nimport { IconButton, Text, Skeleton, Button, AutoRenewIcon, ChevronRightIcon } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport TextEllipsis from '../TextEllipsis'\r\nimport { VotingBox, ModalInner } from './styles'\r\nimport { CastVoteModalProps } from './types'\r\n\r\ninterface MainViewProps {\r\n  vote: {\r\n    label: string\r\n    value: number\r\n  }\r\n  isLoading: boolean\r\n  isPending: boolean\r\n  total: BigNumber\r\n  onConfirm: () => void\r\n  onViewDetails: () => void\r\n  onDismiss: CastVoteModalProps['onDismiss']\r\n}\r\n\r\nconst MainView: React.FC<MainViewProps> = ({\r\n  vote,\r\n  total,\r\n  isPending,\r\n  isLoading,\r\n  onConfirm,\r\n  onViewDetails,\r\n  onDismiss,\r\n}) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <>\r\n      <ModalInner>\r\n        <Text color=\"secondary\" mb=\"8px\" textTransform=\"uppercase\" fontSize=\"12px\" bold>\r\n          {t('Voting For')}\r\n        </Text>\r\n        <TextEllipsis bold fontSize=\"20px\" mb=\"8px\" title={vote.label}>\r\n          {vote.label}\r\n        </TextEllipsis>\r\n        <Text color=\"secondary\" mb=\"8px\" textTransform=\"uppercase\" fontSize=\"12px\" bold>\r\n          {t('Your Voting Power')}\r\n        </Text>\r\n        {isLoading ? (\r\n          <Skeleton height=\"64px\" mb=\"24px\" />\r\n        ) : (\r\n          <VotingBox onClick={onViewDetails} style={{ cursor: 'pointer' }}>\r\n            <Text bold fontSize=\"20px\">\r\n              {total.toFormat(3)}\r\n            </Text>\r\n            <IconButton scale=\"sm\" variant=\"text\">\r\n              <ChevronRightIcon width=\"24px\" />\r\n            </IconButton>\r\n          </VotingBox>\r\n        )}\r\n        <Text as=\"p\" color=\"textSubtle\" fontSize=\"14px\">\r\n          {t('Are you sure you want to vote for the above choice? This action cannot be undone.')}\r\n        </Text>\r\n      </ModalInner>\r\n      <Button\r\n        isLoading={isPending}\r\n        endIcon={isPending ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        disabled={isLoading || total.eq(0)}\r\n        width=\"100%\"\r\n        mb=\"8px\"\r\n        onClick={onConfirm}\r\n      >\r\n        {t('Confirm Vote')}\r\n      </Button>\r\n      <Button variant=\"secondary\" width=\"100%\" onClick={onDismiss}>\r\n        {t('Cancel')}\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainView\r\n","import React, { useState } from 'react'\r\nimport { Box, Modal } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { SnapshotCommand } from 'state/types'\r\nimport { signMessage } from 'utils/web3React'\r\nimport useToast from 'hooks/useToast'\r\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { CastVoteModalProps, ConfirmVoteView } from './types'\r\nimport MainView from './MainView'\r\nimport DetailsView from './DetailsView'\r\nimport { generatePayloadData, Message, sendSnaphotData } from '../../helpers'\r\nimport useGetVotingPower from '../../hooks/useGetVotingPower'\r\n\r\nconst CastVoteModal: React.FC<CastVoteModalProps> = ({ onSuccess, proposalId, vote, block, onDismiss }) => {\r\n  const [view, setView] = useState<ConfirmVoteView>(ConfirmVoteView.MAIN)\r\n  const [modalIsOpen, setModalIsOpen] = useState(true)\r\n  const [isPending, setIsPending] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const { t } = useTranslation()\r\n  const { toastError } = useToast()\r\n  const { library } = useWeb3Provider()\r\n  const { theme } = useTheme()\r\n  const {\r\n    isLoading,\r\n    total,\r\n    cakeBalance,\r\n    cakeVaultBalance,\r\n    cakePoolBalance,\r\n    poolsBalance,\r\n    cakeBnbLpBalance,\r\n    verificationHash,\r\n  } = useGetVotingPower(block, modalIsOpen)\r\n\r\n  const isStartView = view === ConfirmVoteView.MAIN\r\n  const handleBack = isStartView ? null : () => setView(ConfirmVoteView.MAIN)\r\n  const handleViewDetails = () => setView(ConfirmVoteView.DETAILS)\r\n\r\n  const title = {\r\n    [ConfirmVoteView.MAIN]: t('Confirm Vote'),\r\n    [ConfirmVoteView.DETAILS]: t('Voting Power'),\r\n  }\r\n\r\n  const handleDismiss = () => {\r\n    setModalIsOpen(false)\r\n    onDismiss()\r\n  }\r\n\r\n  const handleConfirmVote = async () => {\r\n    try {\r\n      setIsPending(true)\r\n      const voteMsg = JSON.stringify({\r\n        ...generatePayloadData(),\r\n        type: SnapshotCommand.VOTE,\r\n        payload: {\r\n          proposal: proposalId,\r\n          choice: vote.value,\r\n          metadata: {\r\n            votingPower: total.toString(),\r\n            verificationHash,\r\n          },\r\n        },\r\n      })\r\n\r\n      const sig = await signMessage(library, account, voteMsg)\r\n      const msg: Message = { address: account, msg: voteMsg, sig }\r\n\r\n      // Save proposal to snapshot\r\n      await sendSnaphotData(msg)\r\n      setIsPending(false)\r\n\r\n      await onSuccess()\r\n\r\n      handleDismiss()\r\n    } catch (error) {\r\n      setIsPending(false)\r\n      toastError(t('Error'), error?.message)\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={title[view]}\r\n      onBack={handleBack}\r\n      onDismiss={onDismiss}\r\n      hideCloseButton={!isStartView}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      <Box mb=\"24px\" width=\"320px\">\r\n        {view === ConfirmVoteView.MAIN && (\r\n          <MainView\r\n            vote={vote}\r\n            isLoading={isLoading}\r\n            isPending={isPending}\r\n            total={total}\r\n            onConfirm={handleConfirmVote}\r\n            onViewDetails={handleViewDetails}\r\n            onDismiss={handleDismiss}\r\n          />\r\n        )}\r\n        {view === ConfirmVoteView.DETAILS && (\r\n          <DetailsView\r\n            total={total}\r\n            cakeBalance={cakeBalance}\r\n            cakeVaultBalance={cakeVaultBalance}\r\n            cakePoolBalance={cakePoolBalance}\r\n            poolsBalance={poolsBalance}\r\n            cakeBnbLpBalance={cakeBnbLpBalance}\r\n          />\r\n        )}\r\n      </Box>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default CastVoteModal\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Card, CardBody, CardHeader, CardProps, Heading, Radio, Text, useModal } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useAppDispatch } from 'state'\r\nimport { Proposal } from 'state/types'\r\nimport { fetchVotes } from 'state/voting'\r\nimport useToast from 'hooks/useToast'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport CastVoteModal from '../components/CastVoteModal'\r\n\r\ninterface VoteProps extends CardProps {\r\n  proposal: Proposal\r\n}\r\n\r\ninterface State {\r\n  label: string\r\n  value: number\r\n}\r\n\r\nconst Choice = styled.label<{ isChecked: boolean; isDisabled: boolean }>`\r\n  align-items: center;\r\n  border: 1px solid ${({ theme, isChecked }) => theme.colors[isChecked ? 'success' : 'cardBorder']};\r\n  border-radius: 16px;\r\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\r\n  display: flex;\r\n  margin-bottom: 16px;\r\n  padding: 16px;\r\n`\r\n\r\nconst ChoiceText = styled.div`\r\n  flex: 1;\r\n  padding-left: 16px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  width: 0;\r\n`\r\n\r\nconst Vote: React.FC<VoteProps> = ({ proposal, ...props }) => {\r\n  const [vote, setVote] = useState<State>(null)\r\n  const { t } = useTranslation()\r\n  const { toastSuccess } = useToast()\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n\r\n  const handleSuccess = async () => {\r\n    toastSuccess(t('Vote cast!'))\r\n    dispatch(fetchVotes({ proposalId: proposal.id, block: Number(proposal.snapshot) }))\r\n  }\r\n\r\n  const [presentCastVoteModal] = useModal(\r\n    <CastVoteModal onSuccess={handleSuccess} proposalId={proposal.id} vote={vote} block={Number(proposal.snapshot)} />,\r\n  )\r\n\r\n  return (\r\n    <Card {...props}>\r\n      <CardHeader>\r\n        <Heading as=\"h3\" scale=\"md\">\r\n          {t('Cast your vote')}\r\n        </Heading>\r\n      </CardHeader>\r\n      <CardBody>\r\n        {proposal.choices.map((choice, index) => {\r\n          const isChecked = index + 1 === vote?.value\r\n\r\n          const handleChange = () => {\r\n            setVote({\r\n              label: choice,\r\n              value: index + 1,\r\n            })\r\n          }\r\n\r\n          return (\r\n            <Choice key={choice} isChecked={isChecked} isDisabled={!account}>\r\n              <div style={{ flexShrink: 0 }}>\r\n                <Radio scale=\"sm\" value={choice} checked={isChecked} onChange={handleChange} disabled={!account} />\r\n              </div>\r\n              <ChoiceText>\r\n                <Text as=\"span\" title={choice}>\r\n                  {choice}\r\n                </Text>\r\n              </ChoiceText>\r\n            </Choice>\r\n          )\r\n        })}\r\n        {account ? (\r\n          <Button onClick={presentCastVoteModal} disabled={vote === null}>\r\n            {t('Cast Vote')}\r\n          </Button>\r\n        ) : (\r\n          <ConnectWalletButton />\r\n        )}\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Vote\r\n","import React from 'react'\r\nimport { Box, Flex, Skeleton } from '@pancakeswap/uikit'\r\nimport times from 'lodash/times'\r\nimport styled from 'styled-components'\r\n\r\nconst Row = styled(Flex)`\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  padding: 16px 24px;\r\n`\r\n\r\nconst StyledSkeleton = styled(Skeleton)`\r\n  flex: 1;\r\n`\r\n\r\nconst VotesLoading = () => {\r\n  return (\r\n    <Box>\r\n      {times(10).map((index) => (\r\n        <Row key={index}>\r\n          <Skeleton height=\"21px\" mr=\"32px\" width=\"100px\" />\r\n          <StyledSkeleton height=\"21px\" mr=\"32px\" width=\"100%\" />\r\n          <StyledSkeleton height=\"21px\" width=\"100%\" />\r\n        </Row>\r\n      ))}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default VotesLoading\r\n","import styled from 'styled-components'\r\nimport { Grid, Box } from '@pancakeswap/uikit'\r\n\r\nexport const AddressColumn = styled(Box).attrs({ alignItems: 'center' })`\r\n  grid-area: address;\r\n`\r\n\r\nexport const ChoiceColumn = styled(Box)`\r\n  grid-area: choice;\r\n  overflow: hidden;\r\n`\r\n\r\nexport const VotingPowerColumn = styled(Box)`\r\n  justify-self: end;\r\n  grid-area: vote;\r\n`\r\n\r\nconst Row = styled(Grid)`\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  grid-gap: 8px;\r\n  grid-template-areas: 'address choice vote';\r\n  grid-template-columns: minmax(110px, 200px) 1fr 1fr;\r\n  padding: 8px 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    grid-gap: 16px;\r\n    padding: 16px 24px;\r\n  }\r\n`\r\n\r\nexport default Row\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Flex, LinkExternal, Text, Tag, CheckmarkCircleIcon } from '@pancakeswap/uikit'\r\nimport truncateWalletAddress from 'utils/truncateWalletAddress'\r\nimport { getBscScanLink } from 'utils'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Vote } from 'state/types'\r\nimport { IPFS_GATEWAY } from '../../config'\r\nimport TextEllipsis from '../TextEllipsis'\r\nimport Row, { AddressColumn, ChoiceColumn, VotingPowerColumn } from './Row'\r\n\r\ninterface VoteRowProps {\r\n  vote: Vote\r\n  isVoter: boolean\r\n}\r\n\r\nconst VoteRow: React.FC<VoteRowProps> = ({ vote, isVoter }) => {\r\n  const { t } = useTranslation()\r\n  const hasVotingPower = !!vote.metadata?.votingPower\r\n  const votingPower = hasVotingPower ? new BigNumber(vote.metadata.votingPower).toFormat(3) : '--'\r\n\r\n  return (\r\n    <Row>\r\n      <AddressColumn>\r\n        <Flex alignItems=\"center\">\r\n          <LinkExternal href={getBscScanLink(vote.voter, 'address')}>{truncateWalletAddress(vote.voter)}</LinkExternal>\r\n          {isVoter && (\r\n            <Tag variant=\"success\" outline ml=\"8px\">\r\n              <CheckmarkCircleIcon mr=\"4px\" /> {t('Voted')}\r\n            </Tag>\r\n          )}\r\n        </Flex>\r\n      </AddressColumn>\r\n      <ChoiceColumn>\r\n        <TextEllipsis title={vote.proposal.choices[vote.choice - 1]}>\r\n          {vote.proposal.choices[vote.choice - 1]}\r\n        </TextEllipsis>\r\n      </ChoiceColumn>\r\n      <VotingPowerColumn>\r\n        <Flex alignItems=\"center\" justifyContent=\"end\">\r\n          <Text title={vote.metadata.votingPower}>{votingPower}</Text>\r\n          {hasVotingPower && <LinkExternal href={`${IPFS_GATEWAY}/${vote.id}`} />}\r\n        </Flex>\r\n      </VotingPowerColumn>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default VoteRow\r\n","import React, { useState } from 'react'\r\nimport {\r\n  AutoRenewIcon,\r\n  Card,\r\n  CardHeader,\r\n  ChevronDownIcon,\r\n  Flex,\r\n  Heading,\r\n  Button,\r\n  ChevronUpIcon,\r\n  Text,\r\n} from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport orderBy from 'lodash/orderBy'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Vote, VotingStateLoadingStatus } from 'state/types'\r\nimport { useGetVotingStateLoadingStatus } from 'state/voting/hooks'\r\nimport VotesLoading from '../components/Proposal/VotesLoading'\r\nimport VoteRow from '../components/Proposal/VoteRow'\r\nimport Row, { AddressColumn, ChoiceColumn, VotingPowerColumn } from '../components/Proposal/Row'\r\n\r\nconst VOTES_PER_VIEW = 20\r\n\r\ninterface VotesProps {\r\n  votes: Vote[]\r\n}\r\n\r\nconst parseVotePower = (incomingVote: Vote) => {\r\n  return parseFloat(incomingVote?.metadata?.votingPower)\r\n}\r\n\r\nconst Votes: React.FC<VotesProps> = ({ votes }) => {\r\n  const [showAll, setShowAll] = useState(false)\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const orderedVotes = orderBy(votes, [parseVotePower, 'created'], ['desc', 'desc'])\r\n  const displayVotes = showAll ? orderedVotes : orderedVotes.slice(0, VOTES_PER_VIEW)\r\n  const voteStatus = useGetVotingStateLoadingStatus()\r\n  const isFinished = voteStatus === VotingStateLoadingStatus.IDLE\r\n\r\n  const handleClick = () => {\r\n    setShowAll(!showAll)\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Heading as=\"h3\" scale=\"md\">\r\n            {t('Votes (%count%)', { count: votes.length.toLocaleString() })}\r\n          </Heading>\r\n          {!isFinished && <AutoRenewIcon spin width=\"22px\" />}\r\n        </Flex>\r\n      </CardHeader>\r\n      {!isFinished && <VotesLoading />}\r\n\r\n      {isFinished && displayVotes.length > 0 && (\r\n        <>\r\n          <Row>\r\n            <AddressColumn>\r\n              <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\r\n                {t('Voter')}\r\n              </Text>\r\n            </AddressColumn>\r\n            <ChoiceColumn>\r\n              <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\r\n                {t('Decision')}\r\n              </Text>\r\n            </ChoiceColumn>\r\n            <VotingPowerColumn>\r\n              <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\r\n                {t('Vote Weight')}\r\n              </Text>\r\n            </VotingPowerColumn>\r\n          </Row>\r\n          {displayVotes.map((vote) => {\r\n            const isVoter = account && vote.voter.toLowerCase() === account.toLowerCase()\r\n            return <VoteRow key={vote.id} vote={vote} isVoter={isVoter} />\r\n          })}\r\n          <Flex alignItems=\"center\" justifyContent=\"center\" py=\"8px\" px=\"24px\">\r\n            <Button\r\n              width=\"100%\"\r\n              onClick={handleClick}\r\n              variant=\"text\"\r\n              endIcon={\r\n                showAll ? (\r\n                  <ChevronUpIcon color=\"primary\" width=\"21px\" />\r\n                ) : (\r\n                  <ChevronDownIcon color=\"primary\" width=\"21px\" />\r\n                )\r\n              }\r\n              disabled={!isFinished}\r\n            >\r\n              {showAll ? t('Hide') : t('See All')}\r\n            </Button>\r\n          </Flex>\r\n        </>\r\n      )}\r\n\r\n      {isFinished && displayVotes.length === 0 && (\r\n        <Flex alignItems=\"center\" justifyContent=\"center\" py=\"32px\">\r\n          <Heading as=\"h5\">{t('No votes found')}</Heading>\r\n        </Flex>\r\n      )}\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Votes\r\n","import React, { useEffect } from 'react'\r\nimport { ArrowBackIcon, Box, Button, Flex, Heading } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { useAppDispatch } from 'state'\r\nimport { ProposalState, VotingStateLoadingStatus } from 'state/types'\r\nimport {\r\n  useGetProposal,\r\n  useGetVotingStateLoadingStatus,\r\n  useGetVotes,\r\n  useGetProposalLoadingStatus,\r\n} from 'state/voting/hooks'\r\nimport { fetchProposal, fetchVotes, verifyVotes } from 'state/voting'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Container from 'components/Layout/Container'\r\nimport ReactMarkdown from 'components/ReactMarkdown'\r\nimport PageLoader from 'components/Loader/PageLoader'\r\nimport { isCoreProposal } from '../helpers'\r\nimport { ProposalStateTag, ProposalTypeTag } from '../components/Proposals/tags'\r\nimport Layout from '../components/Layout'\r\nimport Details from './Details'\r\nimport Results from './Results'\r\nimport Vote from './Vote'\r\nimport Votes from './Votes'\r\n\r\nconst Proposal = () => {\r\n  const { id }: { id: string } = useParams()\r\n  const proposal = useGetProposal(id)\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const dispatch = useAppDispatch()\r\n  const votes = useGetVotes(id)\r\n  const voteLoadingStatus = useGetVotingStateLoadingStatus()\r\n  const proposalLoadingStatus = useGetProposalLoadingStatus()\r\n  const hasAccountVoted = account && votes.some((vote) => vote.voter.toLowerCase() === account.toLowerCase())\r\n  const { id: proposalId = null, snapshot = null } = proposal ?? {}\r\n  const isPageLoading =\r\n    voteLoadingStatus === VotingStateLoadingStatus.LOADING || proposalLoadingStatus === VotingStateLoadingStatus.LOADING\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchProposal(id))\r\n  }, [id, dispatch])\r\n\r\n  // We have to wait for the proposal to load before fetching the votes because we need to include the snapshot\r\n  useEffect(() => {\r\n    const getVotes = async () => {\r\n      await dispatch(fetchVotes({ proposalId, block: Number(snapshot) }))\r\n      dispatch(verifyVotes({ proposalId, snapshot }))\r\n    }\r\n\r\n    if (proposalId && snapshot) {\r\n      getVotes()\r\n    }\r\n  }, [proposalId, snapshot, dispatch])\r\n\r\n  if (!proposal) {\r\n    return <PageLoader />\r\n  }\r\n\r\n  return (\r\n    <Container py=\"40px\">\r\n      <Box mb=\"40px\">\r\n        <Button as={Link} to=\"/voting\" variant=\"text\" startIcon={<ArrowBackIcon color=\"primary\" width=\"24px\" />} px=\"0\">\r\n          {t('Back to Vote Overview')}\r\n        </Button>\r\n      </Box>\r\n      <Layout>\r\n        <Box>\r\n          <Box mb=\"32px\">\r\n            <Flex alignItems=\"center\" mb=\"8px\">\r\n              <ProposalStateTag proposalState={proposal.state} />\r\n              <ProposalTypeTag isCoreProposal={isCoreProposal(proposal)} ml=\"8px\" />\r\n            </Flex>\r\n            <Heading as=\"h1\" scale=\"xl\" mb=\"16px\">\r\n              {proposal.title}\r\n            </Heading>\r\n            <Box>\r\n              <ReactMarkdown>{proposal.body}</ReactMarkdown>\r\n            </Box>\r\n          </Box>\r\n          {!isPageLoading && !hasAccountVoted && proposal.state === ProposalState.ACTIVE && (\r\n            <Vote proposal={proposal} mb=\"16px\" />\r\n          )}\r\n          <Votes votes={votes} />\r\n        </Box>\r\n        <Box>\r\n          <Details proposal={proposal} />\r\n          <Results choices={proposal.choices} votes={votes} />\r\n        </Box>\r\n      </Layout>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Proposal\r\n"],"sourceRoot":""}