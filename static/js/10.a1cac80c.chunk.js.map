{"version":3,"sources":["views/Voting/helpers.ts","utils/truncateWalletAddress.ts","views/Voting/config.ts","utils/calls/estimateGas.ts","utils/getGasPrice.ts","utils/calls/farms.ts","utils/calls/pools.ts","views/Voting/components/CastVoteModal/styles.tsx","views/Voting/components/BreadcrumbLink.tsx","views/Voting/components/Layout.tsx","views/Voting/components/CastVoteModal/DetailsView.tsx","views/Voting/hooks/useGetVotingPower.tsx","components/ReactMarkdown/styles.tsx","components/ReactMarkdown/index.tsx","../node_modules/lodash/isEmpty.js","views/Voting/CreateProposal/styles.tsx","views/Voting/CreateProposal/Choice.tsx","views/Voting/CreateProposal/Choices.tsx","views/Voting/CreateProposal/helpers.ts","views/Voting/components/VoteDetailsModal.tsx","views/Voting/CreateProposal/index.tsx"],"names":["isCoreProposal","proposal","author","toLowerCase","ADMIN_ADDRESS","filterProposalsByType","proposals","proposalType","ProposalType","COMMUNITY","filter","CORE","ALL","filterProposalsByState","state","generateMetaData","plugins","network","strategies","name","params","symbol","address","getCakeAddress","decimals","generatePayloadData","version","SNAPSHOT_VERSION","timestamp","Date","now","toFixed","space","PANCAKE_SPACE","sendSnaphotData","message","a","fetch","SNAPSHOT_HUB_API","method","headers","Accept","body","JSON","stringify","response","ok","json","error","Error","error_description","data","getVotingPower","account","poolAddresses","block","simpleRpcProvider","getBlockNumber","blockNumber","SNAPSHOT_VOTING_API","calculateVoteResults","votes","reduce","accum","vote","choiceText","choices","choice","getTotalFromVotes","power","BigNumber","metadata","votingPower","plus","BIG_ZERO","truncateWalletAddress","startLength","endLength","substring","length","PROPOSALS_TO_SHOW","IPFS_GATEWAY","VOTE_THRESHOLD","estimateGas","contract","methodName","methodArgs","gasMarginPer10000","rawGasEstimation","gasEstimation","mul","ethers","from","add","div","callWithEstimateGas","overrides","gasLimit","tx","getGasPrice","userGas","store","getState","user","gasPrice","GAS_PRICE_GWEI","default","process","ChainId","MAINNET","toString","testnet","options","DEFAULT_GAS_LIMIT","stakeFarm","masterChefContract","pid","amount","value","times","DEFAULT_TOKEN_DECIMAL","enterStaking","wait","receipt","status","deposit","unstakeFarm","leaveStaking","withdraw","harvestFarm","getActivePools","eligiblePools","pools","pool","sousId","isFinished","undefined","startBlockCalls","map","contractAddress","getAddress","endBlockCalls","multicall","sousChefV2","startBlocks","endBlocks","poolCheck","index","startBlock","endBlock","gte","lte","VotingBox","styled","theme","colors","cardBorder","ModalInner","props","mb","maxWidth","BreadcrumbLink","Link","primaryBright","Layout","mediaQueries","lg","DetailsView","total","cakeBalance","cakeVaultBalance","cakePoolBalance","poolsBalance","cakeBnbLpBalance","t","useTranslation","as","fontSize","color","textTransform","bold","toFormat","alignItems","justifyContent","textAlign","initialState","verificationHash","useGetVotingPower","isActive","useWeb3React","useState","setVotingPower","isLoading","setIsLoading","useEffect","prevVotingPower","fetchVotingPower","Table","table","text","ThemedComponent","Title","scale","my","markdownComponents","h1","h2","h3","h4","h5","h6","p","ol","ul","pre","ReactMarkdown","remarkPlugins","gfm","components","baseKeys","require","getTag","isArguments","isArray","isArrayLike","isBuffer","isPrototype","isTypedArray","hasOwnProperty","Object","prototype","module","exports","splice","tag","size","key","call","BaseLabel","label","Label","SecondaryLabel","FormError","children","FormErrors","errors","mt","Choice","onRemove","onTextInput","isWarning","setIsWarning","isDirty","setIsDirty","position","onChange","evt","currentTarget","right","top","zIndex","variant","onClick","makeChoice","id","uniqueId","Choices","hasMinimumChoices","newValue","newChoices","choiceIndex","findIndex","newChoice","placeholder","newPrevChoice","type","disabled","combineDateAndTime","date","time","isValid","dateStr","format","timeStr","parseISO","getTime","VoteDetailsModal","onDismiss","modalIsOpen","setModalIsOpen","useTheme","title","headerBackground","gradients","cardHeader","width","height","EasyMde","lazy","CreateProposal","startDate","startTime","endDate","endTime","snapshot","setState","fieldsState","setFieldsState","initialBlock","useInitialBlock","push","useHistory","library","useWeb3Provider","useToast","toastSuccess","toastError","useModal","onPresentVoteDetailsModal","formErrors","formData","field","num","hasEmptyChoice","some","Array","startDateTimestamp","getFormErrors","handleSubmit","preventDefault","SnapshotCommand","PROPOSAL","payload","start","end","signMessage","sig","msg","ipfsHash","console","updateValue","prevState","prevFieldsState","handleDateChange","useMemo","hideIcons","Container","py","to","onSubmit","htmlFor","inputName","required","onTextChange","px","DatePicker","selected","placeholderText","mr","href","getBscScanLink","endIcon","spin","isEmpty","count","ConnectWalletButton"],"mappings":"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","file":"static/js/10.a1cac80c.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport { SNAPSHOT_HUB_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { Proposal, ProposalState, ProposalType, Vote } from 'state/types'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport { ADMIN_ADDRESS, PANCAKE_SPACE, SNAPSHOT_VERSION } from './config'\r\n\r\nexport const isCoreProposal = (proposal: Proposal) => {\r\n  return proposal.author.toLowerCase() === ADMIN_ADDRESS.toLowerCase()\r\n}\r\n\r\nexport const filterProposalsByType = (proposals: Proposal[], proposalType: ProposalType) => {\r\n  switch (proposalType) {\r\n    case ProposalType.COMMUNITY:\r\n      return proposals.filter((proposal) => !isCoreProposal(proposal))\r\n    case ProposalType.CORE:\r\n      return proposals.filter((proposal) => isCoreProposal(proposal))\r\n    case ProposalType.ALL:\r\n    default:\r\n      return proposals\r\n  }\r\n}\r\n\r\nexport const filterProposalsByState = (proposals: Proposal[], state: ProposalState) => {\r\n  return proposals.filter((proposal) => proposal.state === state)\r\n}\r\n\r\nexport interface Message {\r\n  address: string\r\n  msg: string\r\n  sig: string\r\n}\r\n\r\n/**\r\n * Generates metadata required by snapshot to validate payload\r\n */\r\nexport const generateMetaData = () => {\r\n  return {\r\n    plugins: {},\r\n    network: 56,\r\n    strategies: [{ name: 'cake', params: { symbol: 'CAKE', address: getCakeAddress(), decimals: 18 } }],\r\n  }\r\n}\r\n\r\n/**\r\n * Returns data that is required on all snapshot payloads\r\n */\r\nexport const generatePayloadData = () => {\r\n  return {\r\n    version: SNAPSHOT_VERSION,\r\n    timestamp: (Date.now() / 1e3).toFixed(),\r\n    space: PANCAKE_SPACE,\r\n  }\r\n}\r\n\r\n/**\r\n * General function to send commands to the snapshot api\r\n */\r\nexport const sendSnaphotData = async (message: Message) => {\r\n  const response = await fetch(SNAPSHOT_HUB_API, {\r\n    method: 'post',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(message),\r\n  })\r\n\r\n  if (!response.ok) {\r\n    const error = await response.json()\r\n    throw new Error(error?.error_description)\r\n  }\r\n\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const getVotingPower = async (account: string, poolAddresses: string[], block?: number) => {\r\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\r\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/power`, {\r\n    method: 'post',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      address: account,\r\n      block: blockNumber,\r\n      poolAddresses,\r\n    }),\r\n  })\r\n  const data = await response.json()\r\n  return data.data\r\n}\r\n\r\nexport const calculateVoteResults = (votes: Vote[]): { [key: string]: Vote[] } => {\r\n  return votes.reduce((accum, vote) => {\r\n    const choiceText = vote.proposal.choices[vote.choice - 1]\r\n\r\n    return {\r\n      ...accum,\r\n      [choiceText]: accum[choiceText] ? [...accum[choiceText], vote] : [vote],\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport const getTotalFromVotes = (votes: Vote[]) => {\r\n  return votes.reduce((accum, vote) => {\r\n    const power = new BigNumber(vote.metadata?.votingPower)\r\n    return accum.plus(power)\r\n  }, BIG_ZERO)\r\n}\r\n","/**\r\n * Truncates a wallet's address\r\n */\r\nconst truncateWalletAddress = (address: string, startLength = 4, endLength = 4) => {\r\n  return `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`\r\n}\r\n\r\nexport default truncateWalletAddress\r\n","export const PROPOSALS_TO_SHOW = 10\r\nexport const ADMIN_ADDRESS = '0x6eaf1b33b8672c5dc40aB8f4bA3A0111723126c7'\r\nexport const IPFS_GATEWAY = 'https://gateway.ipfs.io/ipfs'\r\nexport const SNAPSHOT_VERSION = '0.1.3'\r\nexport const PANCAKE_SPACE = 'cake.eth'\r\nexport const VOTE_THRESHOLD = 10\r\n","import { ethers, Contract, Overrides } from 'ethers'\r\n\r\n/**\r\n * Estimate the gas needed to call a function, and add a 10% margin\r\n * @param contract Used to perform the call\r\n * @param methodName The name of the methode called\r\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\r\n * @param args An array of arguments to pass to the method\r\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\r\n */\r\nexport const estimateGas = async (\r\n  contract: Contract,\r\n  methodName: string,\r\n  methodArgs: any[],\r\n  gasMarginPer10000: number,\r\n) => {\r\n  if (!contract[methodName]) {\r\n    throw new Error(`Method ${methodName} doesn't exist on ${contract.address}`)\r\n  }\r\n  const rawGasEstimation = await contract.estimateGas[methodName](...methodArgs)\r\n  // By convention, ethers.BigNumber values are multiplied by 1000 to avoid dealing with real numbers\r\n  const gasEstimation = rawGasEstimation\r\n    .mul(ethers.BigNumber.from(10000).add(ethers.BigNumber.from(gasMarginPer10000)))\r\n    .div(ethers.BigNumber.from(10000))\r\n  return gasEstimation\r\n}\r\n\r\n/**\r\n * Perform a contract call with a gas value returned from estimateGas\r\n * @param contract Used to perform the call\r\n * @param methodName The name of the method called\r\n * @param methodArgs An array of arguments to pass to the method\r\n * @param overrides An overrides object to pass to the method\r\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\r\n */\r\nexport const callWithEstimateGas = async (\r\n  contract: Contract,\r\n  methodName: string,\r\n  methodArgs: any[] = [],\r\n  overrides: Overrides = {},\r\n  gasMarginPer10000 = 1000,\r\n): Promise<ethers.providers.TransactionResponse> => {\r\n  const gasEstimation = estimateGas(contract, methodName, methodArgs, gasMarginPer10000)\r\n  const tx = await contract[methodName](...methodArgs, {\r\n    gasLimit: gasEstimation,\r\n    ...overrides,\r\n  })\r\n  return tx\r\n}\r\n","import { ChainId } from '@pancakeswap/sdk'\r\nimport store from 'state'\r\nimport { GAS_PRICE_GWEI } from 'state/user/hooks/helpers'\r\n\r\n/**\r\n * Function to return gasPrice outwith a react component\r\n */\r\nconst getGasPrice = (): string => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  const state = store.getState()\r\n  const userGas = state.user.gasPrice || GAS_PRICE_GWEI.default;\r\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\r\n}\r\n\r\nexport default getGasPrice\r\n","import BigNumber from 'bignumber.js'\r\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\r\nimport getGasPrice from 'utils/getGasPrice'\r\n\r\nconst options = {\r\n  gasLimit: DEFAULT_GAS_LIMIT,\r\n}\r\n\r\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\r\n  const gasPrice = getGasPrice()\r\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\r\n  if (pid === 0) {\r\n    const tx = await masterChefContract.enterStaking(value, { ...options, gasPrice })\r\n    const receipt = await tx.wait()\r\n    return receipt.status\r\n  }\r\n\r\n  const tx = await masterChefContract.deposit(pid, value, { ...options, gasPrice })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\r\n  const gasPrice = getGasPrice()\r\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\r\n  if (pid === 0) {\r\n    const tx = await masterChefContract.leaveStaking(value, { ...options, gasPrice })\r\n    const receipt = await tx.wait()\r\n    return receipt.status\r\n  }\r\n\r\n  const tx = await masterChefContract.withdraw(pid, value, { ...options, gasPrice })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nexport const harvestFarm = async (masterChefContract, pid) => {\r\n  const gasPrice = getGasPrice()\r\n  if (pid === 0) {\r\n    const tx = await masterChefContract.leaveStaking('0', { ...options, gasPrice })\r\n    const receipt = await tx.wait()\r\n    return receipt.status\r\n  }\r\n\r\n  const tx = await masterChefContract.deposit(pid, '0', { ...options, gasPrice })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n","/* eslint-disable import/prefer-default-export */\r\nimport BigNumber from 'bignumber.js'\r\nimport pools from 'config/constants/pools'\r\nimport sousChefV2 from 'config/abi/sousChefV2.json'\r\nimport multicall from '../multicall'\r\nimport { simpleRpcProvider } from '../providers'\r\nimport { getAddress } from '../addressHelpers'\r\n\r\n/**\r\n * Returns the total number of pools that were active at a given block\r\n */\r\nexport const getActivePools = async (block?: number) => {\r\n  const eligiblePools = pools\r\n    .filter((pool) => pool.sousId !== 0)\r\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\r\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\r\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\r\n    address: getAddress(contractAddress),\r\n    name: 'startBlock',\r\n  }))\r\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\r\n    address: getAddress(contractAddress),\r\n    name: 'bonusEndBlock',\r\n  }))\r\n  const startBlocks = await multicall(sousChefV2, startBlockCalls)\r\n  const endBlocks = await multicall(sousChefV2, endBlockCalls)\r\n\r\n  return eligiblePools.reduce((accum, poolCheck, index) => {\r\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\r\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\r\n\r\n    if (!startBlock || !endBlock) {\r\n      return accum\r\n    }\r\n\r\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\r\n      return accum\r\n    }\r\n\r\n    return [...accum, poolCheck]\r\n  }, [])\r\n}\r\n","import React from 'react'\r\nimport { Box, BoxProps } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\n\r\nexport const VotingBox = styled.div`\r\n  align-items: center;\r\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  border-radius: 12px;\r\n  display: flex;\r\n  height: 64px;\r\n  justify-content: space-between;\r\n  margin-bottom: 24px;\r\n  padding: 0 16px;\r\n`\r\n\r\nexport const ModalInner: React.FC<BoxProps> = (props) => {\r\n  return <Box mb=\"24px\" maxWidth=\"320px\" {...props} />\r\n}\r\n","import { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nconst BreadcrumbLink = styled(Link)`\r\n  color: ${({ theme }) => theme.colors.primaryBright};\r\n`\r\n\r\nexport default BreadcrumbLink\r\n","import styled from 'styled-components'\r\n\r\nconst Layout = styled.div`\r\n  align-items: start;\r\n  display: grid;\r\n  grid-gap: 32px;\r\n  grid-template-columns: minmax(0, 1fr);\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    grid-template-columns: 1fr 332px;\r\n  }\r\n`\r\n\r\nexport default Layout\r\n","import React from 'react'\r\nimport { Text, Flex } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { VotingBox, ModalInner } from './styles'\r\n\r\ninterface DetailsViewProps {\r\n  total: BigNumber\r\n  cakeBalance: BigNumber\r\n  cakeVaultBalance: BigNumber\r\n  cakePoolBalance: BigNumber\r\n  poolsBalance: BigNumber\r\n  cakeBnbLpBalance: BigNumber\r\n}\r\n\r\nconst DetailsView: React.FC<DetailsViewProps> = ({\r\n  total,\r\n  cakeBalance,\r\n  cakeVaultBalance,\r\n  cakePoolBalance,\r\n  poolsBalance,\r\n  cakeBnbLpBalance,\r\n}) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <ModalInner mb=\"0\">\r\n      <Text as=\"p\" mb=\"24px\" fontSize=\"14px\" color=\"textSubtle\">\r\n        {t(\r\n          'Your voting power is determined by the amount of CAKE you held at the block detailed below. CAKE held in other places does not contribute to your voting power.',\r\n        )}\r\n      </Text>\r\n      <Text color=\"secondary\" textTransform=\"uppercase\" mb=\"4px\" bold fontSize=\"14px\">\r\n        {t('Overview')}\r\n      </Text>\r\n      <VotingBox>\r\n        <Text color=\"secondary\">{t('Your Voting Power')}</Text>\r\n        <Text bold fontSize=\"20px\">\r\n          {total.toFormat(3)}\r\n        </Text>\r\n      </VotingBox>\r\n      <Text color=\"secondary\" textTransform=\"uppercase\" mb=\"4px\" bold fontSize=\"14px\">\r\n        {t('Your Cake Held Now')}\r\n      </Text>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('Wallet')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{cakeBalance.toFormat(3)}</Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('Manual CAKE Pool')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{cakePoolBalance.toFormat(3)}</Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('Auto CAKE Pool')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{cakeVaultBalance.toFormat(3)}</Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('Other Syrup Pools')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{poolsBalance.toFormat(3)}</Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('CAKE BNB LP')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{cakeBnbLpBalance.toFormat(3)}</Text>\r\n      </Flex>\r\n    </ModalInner>\r\n  )\r\n}\r\n\r\nexport default DetailsView\r\n","import { useState, useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { getActivePools } from 'utils/calls'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getVotingPower } from '../helpers'\r\n\r\ninterface State {\r\n  verificationHash: string\r\n  cakeBalance: BigNumber\r\n  cakeVaultBalance: BigNumber\r\n  cakePoolBalance: BigNumber\r\n  poolsBalance: BigNumber\r\n  cakeBnbLpBalance: BigNumber\r\n  total: BigNumber\r\n}\r\n\r\nconst initialState: State = {\r\n  verificationHash: null,\r\n  cakeBalance: BIG_ZERO,\r\n  cakeVaultBalance: BIG_ZERO,\r\n  cakePoolBalance: BIG_ZERO,\r\n  poolsBalance: BIG_ZERO,\r\n  cakeBnbLpBalance: BIG_ZERO,\r\n  total: BIG_ZERO,\r\n}\r\n\r\nconst useGetVotingPower = (block?: number, isActive = true): State & { isLoading: boolean } => {\r\n  const { account } = useWeb3React()\r\n  const [votingPower, setVotingPower] = useState(initialState)\r\n  const [isLoading, setIsLoading] = useState(!!account)\r\n\r\n  useEffect(() => {\r\n    const fetchVotingPower = async () => {\r\n      setIsLoading(true)\r\n\r\n      try {\r\n        const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\r\n        const eligiblePools = await getActivePools(blockNumber)\r\n        const poolAddresses = eligiblePools.map(({ contractAddress }) => getAddress(contractAddress))\r\n        const {\r\n          cakeBalance,\r\n          cakeBnbLpBalance,\r\n          cakePoolBalance,\r\n          total,\r\n          poolsBalance,\r\n          cakeVaultBalance,\r\n          verificationHash,\r\n        } = await getVotingPower(account, poolAddresses, blockNumber)\r\n\r\n        if (isActive) {\r\n          setVotingPower((prevVotingPower) => ({\r\n            ...prevVotingPower,\r\n            verificationHash,\r\n            cakeBalance: new BigNumber(cakeBalance),\r\n            cakeBnbLpBalance: new BigNumber(cakeBnbLpBalance),\r\n            cakePoolBalance: new BigNumber(cakePoolBalance),\r\n            poolsBalance: new BigNumber(poolsBalance),\r\n            cakeVaultBalance: new BigNumber(cakeVaultBalance),\r\n            total: new BigNumber(total),\r\n          }))\r\n        }\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n\r\n    if (account && isActive) {\r\n      fetchVotingPower()\r\n    }\r\n  }, [account, block, setVotingPower, isActive, setIsLoading])\r\n\r\n  return { ...votingPower, isLoading }\r\n}\r\n\r\nexport default useGetVotingPower\r\n","import React from 'react'\r\nimport { Heading, Text } from '@pancakeswap/uikit'\r\nimport { NormalComponents, SpecialComponents } from 'react-markdown/src/ast-to-react'\r\nimport styled from 'styled-components'\r\n\r\nconst Table = styled.table`\r\n  margin-bottom: 32px;\r\n  margin-top: 32px;\r\n  width: 100%;\r\n\r\n  td,\r\n  th {\r\n    color: ${({ theme }) => theme.colors.text};\r\n    padding: 8px;\r\n  }\r\n`\r\n\r\nconst ThemedComponent = styled.div`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  margin-bottom: 16px;\r\n  margin-top: 16px;\r\n\r\n  li {\r\n    margin-bottom: 8px;\r\n  }\r\n`\r\n\r\nconst Pre = styled.pre`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  margin-bottom: 16px;\r\n  margin-top: 16px;\r\n  max-width: 100%;\r\n  overflow-x: auto;\r\n`\r\n\r\nconst Title = (props) => {\r\n  return <Heading as=\"h4\" scale=\"lg\" my=\"16px\" {...props} />\r\n}\r\n\r\nconst markdownComponents: Partial<NormalComponents & SpecialComponents> = {\r\n  h1: Title,\r\n  h2: Title,\r\n  h3: Title,\r\n  h4: Title,\r\n  h5: Title,\r\n  h6: Title,\r\n  p: (props) => {\r\n    return <Text as=\"p\" my=\"16px\" {...props} />\r\n  },\r\n  table: Table,\r\n  ol: (props) => {\r\n    return <ThemedComponent as=\"ol\" {...props} />\r\n  },\r\n  ul: (props) => {\r\n    return <ThemedComponent as=\"ul\" {...props} />\r\n  },\r\n  pre: Pre,\r\n}\r\n\r\nexport default markdownComponents\r\n","import React from 'react'\r\nimport ReactMarkdownLib, { ReactMarkdownOptions } from 'react-markdown'\r\nimport gfm from 'remark-gfm'\r\nimport markdownComponents from './styles'\r\n\r\nconst ReactMarkdown: React.FC<ReactMarkdownOptions> = (props) => {\r\n  return <ReactMarkdownLib remarkPlugins={[gfm]} components={markdownComponents} {...props} />\r\n}\r\n\r\nexport default ReactMarkdown\r\n","var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n","import React from 'react'\r\nimport { Box, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\n\r\nconst BaseLabel = styled.label`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  display: block;\r\n  font-weight: 600;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nexport const Label = styled(BaseLabel)`\r\n  font-size: 20px;\r\n`\r\n\r\nexport const SecondaryLabel = styled(BaseLabel)`\r\n  font-size: 12px;\r\n  text-transform: uppercase;\r\n`\r\n\r\nexport const FormError: React.FC = ({ children }) => (\r\n  <Text color=\"failure\" mb=\"4px\">\r\n    {children}\r\n  </Text>\r\n)\r\n\r\nexport const FormErrors: React.FC<{ errors: string[] }> = ({ errors }) => {\r\n  return (\r\n    <Box mt=\"8px\">\r\n      {errors.map((error) => {\r\n        return <FormError key={error}>{error}</FormError>\r\n      })}\r\n    </Box>\r\n  )\r\n}\r\n","import React, { ChangeEvent, InputHTMLAttributes, useState } from 'react'\r\nimport { Box, CloseIcon, IconButton, Input, InputProps } from '@pancakeswap/uikit'\r\n\r\ninterface ChoiceProps extends InputProps, InputHTMLAttributes<HTMLInputElement> {\r\n  onTextInput: (value: string) => void\r\n  onRemove?: () => void\r\n}\r\n\r\nconst Choice: React.FC<ChoiceProps> = ({ onRemove, onTextInput, ...props }) => {\r\n  const [isWarning, setIsWarning] = useState(false)\r\n  const [isDirty, setIsDirty] = useState(false)\r\n\r\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = evt.currentTarget\r\n\r\n    setIsWarning(isDirty && value.length === 0)\r\n    setIsDirty(true)\r\n    onTextInput(value)\r\n  }\r\n\r\n  return (\r\n    <Box position=\"relative\" mb=\"16px\">\r\n      <Input {...props} onChange={handleChange} isWarning={isWarning} />\r\n      {onRemove && (\r\n        <Box position=\"absolute\" right=\"8px\" top=\"0px\" zIndex={30}>\r\n          <IconButton variant=\"text\" onClick={onRemove}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Choice\r\n","import React from 'react'\r\nimport { Button, Card, CardBody, CardHeader, Heading } from '@pancakeswap/uikit'\r\nimport uniqueId from 'lodash/uniqueId'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Choice from './Choice'\r\n\r\nexport interface Choice {\r\n  id: string\r\n  value: string\r\n}\r\n\r\ninterface ChoicesProps {\r\n  choices: Choice[]\r\n  onChange: (newChoices: Choice[]) => void\r\n}\r\n\r\nexport const MINIMUM_CHOICES = 2\r\nexport const makeChoice = (): Choice => ({ id: uniqueId(), value: '' })\r\n\r\nconst Choices: React.FC<ChoicesProps> = ({ choices, onChange }) => {\r\n  const { t } = useTranslation()\r\n  const hasMinimumChoices = choices.filter((choice) => choice.value.length > 0).length >= MINIMUM_CHOICES\r\n\r\n  const addChoice = () => {\r\n    onChange([...choices, makeChoice()])\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <Heading as=\"h3\" scale=\"md\">\r\n          {t('Choices')}\r\n        </Heading>\r\n      </CardHeader>\r\n      <CardBody>\r\n        {choices.map(({ id, value }, index) => {\r\n          const handleTextInput = (newValue: string) => {\r\n            const newChoices = [...choices]\r\n            const choiceIndex = newChoices.findIndex((newChoice) => newChoice.id === id)\r\n\r\n            newChoices[choiceIndex].value = newValue\r\n\r\n            onChange(newChoices)\r\n          }\r\n\r\n          const handleRemove = () => {\r\n            onChange(choices.filter((newPrevChoice) => newPrevChoice.id !== id))\r\n          }\r\n\r\n          return (\r\n            <Choice\r\n              key={id}\r\n              scale=\"lg\"\r\n              onTextInput={handleTextInput}\r\n              placeholder={t('Input choice text')}\r\n              value={value}\r\n              onRemove={index > 1 ? handleRemove : undefined}\r\n            />\r\n          )\r\n        })}\r\n\r\n        <Button type=\"button\" onClick={addChoice} disabled={!hasMinimumChoices}>\r\n          {t('Add Choice')}\r\n        </Button>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Choices\r\n","import { ContextApi } from 'contexts/Localization/types'\r\nimport { format, parseISO, isValid } from 'date-fns'\r\nimport { MINIMUM_CHOICES } from './Choices'\r\nimport { FormState } from './types'\r\n\r\nexport const combineDateAndTime = (date: Date, time: Date) => {\r\n  if (!isValid(date) || !isValid(time)) {\r\n    return null\r\n  }\r\n\r\n  const dateStr = format(date, 'yyyy-MM-dd')\r\n  const timeStr = format(time, 'HH:mm:ss')\r\n\r\n  return parseISO(`${dateStr}T${timeStr}`).getTime() / 1e3\r\n}\r\n\r\nexport const getFormErrors = (formData: FormState, t: ContextApi['t']) => {\r\n  const { name, body, choices, startDate, startTime, endDate, endTime, snapshot } = formData\r\n  const errors: { [key: string]: string[] } = {}\r\n\r\n  if (!name) {\r\n    errors.name = [t('%field% is required', { field: 'Title' })]\r\n  }\r\n\r\n  if (!body) {\r\n    errors.body = [t('%field% is required', { field: 'Body' })]\r\n  }\r\n\r\n  if (choices.length < MINIMUM_CHOICES) {\r\n    errors.choices = [t('Please create a minimum of %num% choices', { num: MINIMUM_CHOICES })]\r\n  }\r\n\r\n  const hasEmptyChoice = choices.some((choice) => !choice.value)\r\n  if (choices.length === MINIMUM_CHOICES && hasEmptyChoice) {\r\n    errors.choices = Array.isArray(errors.choices)\r\n      ? [...errors.choices, t('Choices must not be empty')]\r\n      : (errors.choices = [t('Choices must not be empty')])\r\n  }\r\n\r\n  if (!isValid(startDate)) {\r\n    errors.startDate = [t('Please select a valid date')]\r\n  }\r\n\r\n  if (!isValid(startTime)) {\r\n    errors.startTime = [t('Please select a valid time')]\r\n  }\r\n\r\n  if (!isValid(endDate)) {\r\n    errors.endDate = [t('Please select a valid date')]\r\n  }\r\n\r\n  if (!isValid(endTime)) {\r\n    errors.endTime = [t('Please select a valid time')]\r\n  }\r\n\r\n  const startDateTimestamp = combineDateAndTime(startDate, startTime)\r\n  const endDateTimestamp = combineDateAndTime(endDate, endTime)\r\n\r\n  if (endDateTimestamp < startDateTimestamp) {\r\n    errors.endDate = Array.isArray(errors.endDate)\r\n      ? [...errors.endDate, t('End date must be after the start date')]\r\n      : (errors.endDate = [t('End date must be after the start date')])\r\n  }\r\n\r\n  if (snapshot === 0) {\r\n    errors.snapshot = [t('Invalid snapshot')]\r\n  }\r\n\r\n  return errors\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Box, Flex, InjectedModalProps, Modal, Button, Spinner } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useGetVotingPower from '../hooks/useGetVotingPower'\r\nimport DetailsView from './CastVoteModal/DetailsView'\r\n\r\ninterface VoteDetailsModalProps extends InjectedModalProps {\r\n  block: number\r\n}\r\n\r\nconst VoteDetailsModal: React.FC<VoteDetailsModalProps> = ({ block, onDismiss }) => {\r\n  const { t } = useTranslation()\r\n  const [modalIsOpen, setModalIsOpen] = useState(true)\r\n  const { isLoading, total, cakeBalance, cakeVaultBalance, cakePoolBalance, poolsBalance, cakeBnbLpBalance } =\r\n    useGetVotingPower(block, modalIsOpen)\r\n  const { theme } = useTheme()\r\n\r\n  const handleDismiss = () => {\r\n    setModalIsOpen(false)\r\n    onDismiss()\r\n  }\r\n\r\n  return (\r\n    <Modal title={t('Voting Power')} onDismiss={handleDismiss} headerBackground={theme.colors.gradients.cardHeader}>\r\n      <Box mb=\"24px\" width=\"320px\">\r\n        {isLoading ? (\r\n          <Flex height=\"450px\" alignItems=\"center\" justifyContent=\"center\">\r\n            <Spinner size={80} />\r\n          </Flex>\r\n        ) : (\r\n          <>\r\n            <DetailsView\r\n              total={total}\r\n              cakeBalance={cakeBalance}\r\n              cakeVaultBalance={cakeVaultBalance}\r\n              cakePoolBalance={cakePoolBalance}\r\n              poolsBalance={poolsBalance}\r\n              cakeBnbLpBalance={cakeBnbLpBalance}\r\n            />\r\n            <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" mt=\"16px\">\r\n              {t('Close')}\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Box>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default VoteDetailsModal\r\n","import React, { ChangeEvent, FormEvent, lazy, useEffect, useState, useMemo } from 'react'\r\nimport {\r\n  AutoRenewIcon,\r\n  Box,\r\n  Breadcrumbs,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Flex,\r\n  Heading,\r\n  Input,\r\n  LinkExternal,\r\n  Text,\r\n  useModal,\r\n} from '@pancakeswap/uikit'\r\nimport { useHistory } from 'react-router'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport times from 'lodash/times'\r\nimport isEmpty from 'lodash/isEmpty'\r\nimport { useInitialBlock } from 'state/block/hooks'\r\nimport { SnapshotCommand } from 'state/types'\r\nimport useToast from 'hooks/useToast'\r\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\r\nimport { getBscScanLink } from 'utils'\r\nimport truncateWalletAddress from 'utils/truncateWalletAddress'\r\nimport { signMessage } from 'utils/web3React'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Container from 'components/Layout/Container'\r\nimport { DatePicker, TimePicker } from 'components/DatePicker'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport ReactMarkdown from 'components/ReactMarkdown'\r\nimport BreadcrumbLink from '../components/BreadcrumbLink'\r\nimport { sendSnaphotData, Message, generateMetaData, generatePayloadData } from '../helpers'\r\nimport Layout from '../components/Layout'\r\nimport { FormErrors, Label, SecondaryLabel } from './styles'\r\nimport Choices, { Choice, makeChoice, MINIMUM_CHOICES } from './Choices'\r\nimport { combineDateAndTime, getFormErrors } from './helpers'\r\nimport { FormState } from './types'\r\nimport { ADMIN_ADDRESS, VOTE_THRESHOLD } from '../config'\r\nimport VoteDetailsModal from '../components/VoteDetailsModal'\r\n\r\nconst EasyMde = lazy(() => import('components/EasyMde'))\r\n\r\nconst CreateProposal = () => {\r\n  const [state, setState] = useState<FormState>({\r\n    name: '',\r\n    body: '',\r\n    choices: times(MINIMUM_CHOICES).map(makeChoice),\r\n    startDate: null,\r\n    startTime: null,\r\n    endDate: null,\r\n    endTime: null,\r\n    snapshot: 0,\r\n  })\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [fieldsState, setFieldsState] = useState<{ [key: string]: boolean }>({})\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const initialBlock = useInitialBlock()\r\n  const { push } = useHistory()\r\n  const { library } = useWeb3Provider()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const [onPresentVoteDetailsModal] = useModal(<VoteDetailsModal block={state.snapshot} />)\r\n  const { name, body, choices, startDate, startTime, endDate, endTime, snapshot } = state\r\n  const formErrors = getFormErrors(state, t)\r\n\r\n  const handleSubmit = async (evt: FormEvent<HTMLFormElement>) => {\r\n    evt.preventDefault()\r\n\r\n    try {\r\n      setIsLoading(true)\r\n      const proposal = JSON.stringify({\r\n        ...generatePayloadData(),\r\n        type: SnapshotCommand.PROPOSAL,\r\n        payload: {\r\n          name,\r\n          body,\r\n          snapshot,\r\n          start: combineDateAndTime(startDate, startTime),\r\n          end: combineDateAndTime(endDate, endTime),\r\n          choices: choices\r\n            .filter((choice) => choice.value)\r\n            .map((choice) => {\r\n              return choice.value\r\n            }),\r\n          metadata: generateMetaData(),\r\n          type: 'single-choice',\r\n        },\r\n      })\r\n\r\n      const sig = await signMessage(library, account, proposal)\r\n\r\n      if (sig) {\r\n        const msg: Message = { address: account, msg: proposal, sig }\r\n\r\n        // Save proposal to snapshot\r\n        const data = await sendSnaphotData(msg)\r\n\r\n        // Redirect user to newly created proposal page\r\n        push(`/voting/proposal/${data.ipfsHash}`)\r\n\r\n        toastSuccess(t('Proposal created!'))\r\n      } else {\r\n        toastError(t('Error'), t('Unable to sign payload'))\r\n      }\r\n    } catch (error) {\r\n      toastError(t('Error'), error?.message || error?.error)\r\n      console.error(error)\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const updateValue = (key: string, value: string | Choice[] | Date) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [key]: value,\r\n    }))\r\n\r\n    // Keep track of what fields the user has attempted to edit\r\n    setFieldsState((prevFieldsState) => ({\r\n      ...prevFieldsState,\r\n      [key]: true,\r\n    }))\r\n  }\r\n\r\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\r\n    const { name: inputName, value } = evt.currentTarget\r\n    updateValue(inputName, value)\r\n  }\r\n\r\n  const handleEasyMdeChange = (value: string) => {\r\n    updateValue('body', value)\r\n  }\r\n\r\n  const handleChoiceChange = (newChoices: Choice[]) => {\r\n    updateValue('choices', newChoices)\r\n  }\r\n\r\n  const handleDateChange = (key: string) => (value: Date) => {\r\n    updateValue(key, value)\r\n  }\r\n\r\n  const options = useMemo(\r\n    () => ({\r\n      hideIcons: account === ADMIN_ADDRESS ? [] : ['guide', 'fullscreen', 'preview', 'side-by-side', 'image'],\r\n    }),\r\n    [account],\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (initialBlock > 0) {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        snapshot: initialBlock,\r\n      }))\r\n    }\r\n  }, [initialBlock, setState])\r\n\r\n  return (\r\n    <Container py=\"40px\">\r\n      <Box mb=\"48px\">\r\n        <Breadcrumbs>\r\n          <BreadcrumbLink to=\"/\">{t('Home')}</BreadcrumbLink>\r\n          <BreadcrumbLink to=\"/voting\">{t('Voting')}</BreadcrumbLink>\r\n          <Text>{t('Make a Proposal')}</Text>\r\n        </Breadcrumbs>\r\n      </Box>\r\n      <form onSubmit={handleSubmit}>\r\n        <Layout>\r\n          <Box>\r\n            <Box mb=\"24px\">\r\n              <Label htmlFor=\"name\">{t('Title')}</Label>\r\n              <Input id=\"name\" name=\"name\" value={name} scale=\"lg\" onChange={handleChange} required />\r\n              {formErrors.name && fieldsState.name && <FormErrors errors={formErrors.name} />}\r\n            </Box>\r\n            <Box mb=\"24px\">\r\n              <Label htmlFor=\"body\">{t('Content')}</Label>\r\n              <Text color=\"textSubtle\" mb=\"8px\">\r\n                {t('Tip: write in Markdown!')}\r\n              </Text>\r\n              <EasyMde\r\n                id=\"body\"\r\n                name=\"body\"\r\n                onTextChange={handleEasyMdeChange}\r\n                value={body}\r\n                options={options}\r\n                required\r\n              />\r\n              {formErrors.body && fieldsState.body && <FormErrors errors={formErrors.body} />}\r\n            </Box>\r\n            {body && (\r\n              <Box mb=\"24px\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <Heading as=\"h3\" scale=\"md\">\r\n                      {t('Preview')}\r\n                    </Heading>\r\n                  </CardHeader>\r\n                  <CardBody p=\"0\" px=\"24px\">\r\n                    <ReactMarkdown>{body}</ReactMarkdown>\r\n                  </CardBody>\r\n                </Card>\r\n              </Box>\r\n            )}\r\n            <Choices choices={choices} onChange={handleChoiceChange} />\r\n            {formErrors.choices && fieldsState.choices && <FormErrors errors={formErrors.choices} />}\r\n          </Box>\r\n          <Box>\r\n            <Card>\r\n              <CardHeader>\r\n                <Heading as=\"h3\" scale=\"md\">\r\n                  {t('Actions')}\r\n                </Heading>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Box mb=\"24px\">\r\n                  <SecondaryLabel>{t('Start Date')}</SecondaryLabel>\r\n                  <DatePicker\r\n                    name=\"startDate\"\r\n                    onChange={handleDateChange('startDate')}\r\n                    selected={startDate}\r\n                    placeholderText=\"YYYY/MM/DD\"\r\n                  />\r\n                  {formErrors.startDate && fieldsState.startDate && <FormErrors errors={formErrors.startDate} />}\r\n                </Box>\r\n                <Box mb=\"24px\">\r\n                  <SecondaryLabel>{t('Start Time')}</SecondaryLabel>\r\n                  <TimePicker\r\n                    name=\"startTime\"\r\n                    onChange={handleDateChange('startTime')}\r\n                    selected={startTime}\r\n                    placeholderText=\"00:00\"\r\n                  />\r\n                  {formErrors.startTime && fieldsState.startTime && <FormErrors errors={formErrors.startTime} />}\r\n                </Box>\r\n                <Box mb=\"24px\">\r\n                  <SecondaryLabel>{t('End Date')}</SecondaryLabel>\r\n                  <DatePicker\r\n                    name=\"endDate\"\r\n                    onChange={handleDateChange('endDate')}\r\n                    selected={endDate}\r\n                    placeholderText=\"YYYY/MM/DD\"\r\n                  />\r\n                  {formErrors.endDate && fieldsState.endDate && <FormErrors errors={formErrors.endDate} />}\r\n                </Box>\r\n                <Box mb=\"24px\">\r\n                  <SecondaryLabel>{t('End Time')}</SecondaryLabel>\r\n                  <TimePicker\r\n                    name=\"endTime\"\r\n                    onChange={handleDateChange('endTime')}\r\n                    selected={endTime}\r\n                    placeholderText=\"00:00\"\r\n                  />\r\n                  {formErrors.endTime && fieldsState.endTime && <FormErrors errors={formErrors.endTime} />}\r\n                </Box>\r\n                {account && (\r\n                  <Flex alignItems=\"center\" mb=\"8px\">\r\n                    <Text color=\"textSubtle\" mr=\"16px\">\r\n                      {t('Creator')}\r\n                    </Text>\r\n                    <LinkExternal href={getBscScanLink(account, 'address')}>\r\n                      {truncateWalletAddress(account)}\r\n                    </LinkExternal>\r\n                  </Flex>\r\n                )}\r\n                <Flex alignItems=\"center\" mb=\"16px\">\r\n                  <Text color=\"textSubtle\" mr=\"16px\">\r\n                    {t('Snapshot')}\r\n                  </Text>\r\n                  <LinkExternal href={getBscScanLink(snapshot, 'block')}>{snapshot}</LinkExternal>\r\n                </Flex>\r\n                {account ? (\r\n                  <>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      width=\"100%\"\r\n                      isLoading={isLoading}\r\n                      endIcon={isLoading ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n                      disabled={!isEmpty(formErrors)}\r\n                      mb=\"16px\"\r\n                    >\r\n                      {t('Publish')}\r\n                    </Button>\r\n                    <Text color=\"failure\" as=\"p\" mb=\"4px\">\r\n                      {t('You need at least %count% voting power to publish a proposal.', { count: VOTE_THRESHOLD })}{' '}\r\n                    </Text>\r\n                    <Button scale=\"sm\" type=\"button\" variant=\"text\" onClick={onPresentVoteDetailsModal} p={0}>\r\n                      {t('Check voting power')}\r\n                    </Button>\r\n                  </>\r\n                ) : (\r\n                  <ConnectWalletButton width=\"100%\" type=\"button\" />\r\n                )}\r\n              </CardBody>\r\n            </Card>\r\n          </Box>\r\n        </Layout>\r\n      </form>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default CreateProposal\r\n"],"sourceRoot":""}